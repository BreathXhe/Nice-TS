{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/framework/logger/Logger.ts","webpack:///external \"csharp\"","webpack:///./src/framework/common/Singleton.ts","webpack:///./node_modules/protobufjs/src/util/minimal.js","webpack:///./src/modules/ModuleDef.ts","webpack:///./src/framework/manager/ResManager.ts","webpack:///./src/data/pb/OuterMessage.js","webpack:///./src/data/pb/Opcode.ts","webpack:///./src/framework/manager/UIManager.ts","webpack:///./src/framework/ui/UIDefine.ts","webpack:///./src/data/ui/game.ts","webpack:///./src/global/GameConfig.ts","webpack:///./src/framework/common/Messenger.ts","webpack:///./node_modules/protobufjs/src/writer.js","webpack:///./node_modules/protobufjs/src/reader.js","webpack:///./src/data/excel/SkillConfig.ts","webpack:///./src/framework/manager/ModuleManager.ts","webpack:///./src/framework/module/GeneralModule.ts","webpack:///./src/framework/ui/UIPage.ts","webpack:///./src/framework/ui/UIPanel.ts","webpack:///./src/framework/common/NiceDecorator.ts","webpack:///./src/framework/net/NetErrorCode.ts","webpack:///./src/GameMain.ts","webpack:///./src/unittest/UnitTest.ts","webpack:///./src/framework/util/TimeUtil.ts","webpack:///./src/unittest/SingletonTest.ts","webpack:///external \"puerts\"","webpack:///./node_modules/protobufjs/minimal.js","webpack:///./node_modules/protobufjs/src/index-minimal.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@protobufjs/aspromise/index.js","webpack:///./node_modules/@protobufjs/base64/index.js","webpack:///./node_modules/@protobufjs/eventemitter/index.js","webpack:///./node_modules/@protobufjs/float/index.js","webpack:///./node_modules/@protobufjs/inquire/index.js","webpack:///./node_modules/@protobufjs/utf8/index.js","webpack:///./node_modules/@protobufjs/pool/index.js","webpack:///./node_modules/protobufjs/src/util/longbits.js","webpack:///./node_modules/protobufjs/src/writer_buffer.js","webpack:///./node_modules/protobufjs/src/reader_buffer.js","webpack:///./node_modules/protobufjs/src/rpc.js","webpack:///./node_modules/protobufjs/src/rpc/service.js","webpack:///./node_modules/protobufjs/src/roots.js","webpack:///./node_modules/long/src/long.js","webpack:///./src/framework/common/GameObjectPool.ts","webpack:///./src/framework/module/ModuleFactory.ts","webpack:///./src/modules/login/LoginModule.ts","webpack:///./src/framework/ui/UIFactory.ts","webpack:///./src/modules/login/ui/UILoginPage.ts","webpack:///./src/framework/ui/UILib/UISimpleLoading.ts","webpack:///./src/framework/ui/UILoading.ts","webpack:///./src/modules/home/ui/UIHomePage.ts","webpack:///./src/framework/net/GameSession.ts","webpack:///./src/modules/home/HomeModule.ts","webpack:///./src/data/excel/ExcelManager.ts","webpack:///./src/data/excel/HeroConfig.ts","webpack:///./src/data/excel/UnitConfig.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CS","msg","GameConfig","debug","Logger","Log","LogError","require","Singleton","this","instance","util","merge","dst","src","ifNotSet","keys","length","undefined","newError","CustomError","message","properties","Error","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","inquire","utf8","pool","LongBits","isNode","Boolean","global","process","versions","node","window","self","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","Math","floor","isString","String","isObject","isset","isSet","obj","prop","Array","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","str","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","SceneDef","LoadingScene","LaunchScene","HomeScene","LoginScene","BattleScene","ModuleDef","LoginModule","HomeModule","ShopModule","PVEModule","ModuleMessage","LOGIN_REAMSERVER","csResMgr","Addressable","ResourceManager","ResManager","super","fblabel","OnFBLoadedHandle","onFBLoadedHandle","data","fbcaches","set","task","PreadloadFB","$promise","ex","logError","address","LoadPrefab","LoadTextAsset","LoadSprite","go","ReleaseAddressGO","Map","$protobuf","$Reader","Reader","$Writer","Writer","$util","configure","NiceET","$root","roots","C2M_TestRequest","RpcId","ActorId","request","encode","writer","uint32","string","int32","sint64","encodeDelimited","ldelim","decode","reader","end","len","pos","tag","skipType","decodeDelimited","verify","low","high","fromObject","fromValue","parseInt","toObject","options","defaults","long","toJSON","M2C_TestResponse","Message","response","Actor_TransferRequest","MapIndex","Actor_TransferResponse","C2G_EnterMap","G2C_EnterMap","Units","UnitId","UnitInfo","fork","push","error","TypeError","arrays","j","X","Y","Z","M2C_CreateUnits","Frame_ClickMap","Id","M2C_PathfindingResult","Xs","Ys","Zs","end2","C2R_Ping","R2C_Ping","G2C_Test","C2M_Reload","Account","Password","M2C_Reload","C2R_Login","R2C_Login","Address","Key","GateId","C2G_LoginGate","G2C_LoginGate","PlayerId","G2C_TestHotfixMessage","Info","C2M_TestActorRequest","M2C_TestActorResponse","PlayerInfo","C2G_PlayerInfo","G2C_PlayerInfo","PlayerInfos","TestRepeatedString","TestRepeatedInt32","TestRepeatedInt64","DecodeMsg","Opcode","opcode","msgObj","map","decodeMsg","rpcId","C2M_TESTREQUEST","M2C_TESTRESPONSE","ACTOR_TRANSFERREQUEST","ACTOR_TRANSFERRESPONSE","C2G_ENTERMAP","G2C_ENTERMAP","UNITINFO","M2C_CREATEUNITS","FRAME_CLICKMAP","M2C_PATHFINDINGRESULT","C2R_PING","R2C_PING","G2C_TEST","C2M_RELOAD","M2C_RELOAD","C2R_LOGIN","R2C_LOGIN","C2G_LOGINGATE","G2C_LOGINGATE","G2C_TESTHOTFIXMESSAGE","C2M_TESTACTORREQUEST","M2C_TESTACTORRESPONSE","PLAYERINFO","C2G_PLAYERINFO","G2C_PLAYERINFO","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","UIPageTrack","UIManager","m_pageTrackStack","m_listLoadedPanel","UnityEngine","SceneManagement","SceneManager","add_sceneLoaded","scene","onSceneLoadedOnly","panel","isOpen","close","slice","dispose","closeAllLoadedPanel","pkg","arg","ui","getUI","UIFactory","createUI","open","onLoadComplete","sceneName","closeLoading","gameUI","UILoadingPage","openLoading","PackageName","LoadScene","page","m_currentPage","openPageWorker","track","pop","enterMainPage","GetActiveScene","loadScene","openPageInScene","UIHomePage","UITypeDef","UILayerDef","type","Loading","Widget","Window","NormalWindow","Page","Unkown","Background","TopWindow","UIComDefs","BackBtn","WindowCloseBtn","UIUINoticeWin","UILaunchPage","UILoginPage","UISelServerWin","UIserverItem","UILevelPage","UIShopPage","realmServerIP","realmServerPort","MesObj","listenerMap","e_type","e_obj","e_listner","listeners","params","apply","delete","e_listener","splice","clear","BufferWriter","Op","fn","val","next","noop","State","head","tail","states","writeByte","buf","VarintOp","writeVarint64","writeFixed32","alloc","subarray","_push","fromNumber","sint32","uint64","int64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","write","reset","finish","BufferWriter_","BufferReader","indexOutOfRange","writeLength","RangeError","buffer","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","readFloatLE","readDoubleLE","start","read","skip","wireType","BufferReader_","zzDecode","SkillConfigTR","_id","_Name","_Description","_CoolTime","_CostSP","_AttackDistance","_AttackAngle","_AttackTargetTags","_ImpactType","_NextBattlerId","_AtkRatio","_DurationTime","_AtkInterval","_SkillPrefab","_AnimationName","_HitFxPrefab","_Level","_AttackType","_SelectorType","SkillConfigTB","trs","MessageObject","ModuleManager","m_mapModules","m_mapCacheMessage","values","release","args","log","hasModule","getModule","ModuleFactory","createModule","has","list","msgobj","handleMessage","target","getCacheMessageList","model","show","m_name","messenger","Messenger","mesObj","getListener","UIPage","UIPanel","m_btnGoBack","fui","GetChild","onClick","Add","onBtnGoBack","k","fguiName","onOpen","onClose","Instance","goBackPage","m_layer","v","_name","visiable","layer","getDefaultLayer","uiType","onAwake","onUpdate","FairyGUI","GRoot","inst","AddChild","RemoveChild","Dispose","NetErrorCode","ERR_SocketConnSucc","ERR_ConnectGateKeyError","ERR_PeerDisconnect","ERR_SocketCantSend","ERR_SocketError","ERR_SocketConnError","JsManager","JsOnApplicationQuit","onApplicationQuit","JsOnDispose","onDispose","GameObjectPool","ExcelManager","UnitTest","doTest","GameLaunch","JsLuanchFinish","cleanup","TimeUtil","test","SingletonTest","t1","t2","add","listen","a","b","addListener","broadcast","removeListener","clearup","interval","setInterval","setTimeout","clearInterval","prefab","loadPrefab","testMap","arr1","arr2","skilltr","impacttype","c2m_req","v1","de_buf","de_m_t","de_m","op_test","opcode_arr","opcode_arr2","merge_arr","buffer1","testVar","num","join","timeInt","hour","hourstr","prefixInteger","minnute","second","time","date","Date","setDate","getDay","year","month","isLeapYear","months","getMonthDays_","getFullYear","getMonth","getTimeString1","getTimeString","t3","getTimeMinuteString","t4","getTimeSecondString","getTime","t5","getWeekOfMonthFirstDay","t6","getMonthDays","protobuf","build","rpc","g","Function","ctx","arguments","offset","index","pending","Promise","resolve","reject","err","ceil","b64","s64","parts","chunk","fromCharCode","charCodeAt","_listeners","on","evt","off","emit","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","mod","eval","replace","c1","c2","SIZE","MAX","slab","zero","fromString","toLong","mask","part0","part1","part2","writeStringBuffer","writeBytesBuffer","copy","byteLength","utf8Slice","min","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","callback","endedByRPC","wasm","WebAssembly","Module","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","indexOf","radixToPower","result","power","mul","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","max","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","__cacheTransRoot","__goPool","__instCache","GameObject","Find","DontDestroyOnLoad","transform","path","cachedInst","inst_count","Instantiate","SetParent","SetActive","checkHasCached","pooledGo","cacheAndInstGameObject","tryGetFromCache","preLoadGameObjectAsync","includePooledGo","forEach","Destroy","releaseAddressGO","GeneralModule","_playerID","loginReamServer","account","password","sessionReam","GameSession","connectChannel","channel","code","onReamSocketErr","id","rpcID","send","gateId","gateKey","disconnect","loginGateServer","sessionGate","onGateSocketErr","UIPackage","CreateObject","asCom","UISimpleLoading","awake","bindAll","m_loginBtn","onLoginClick","m_account","text","m_password","sendMessage","binder","UILoading","UILoadingArg","title","tips","progress","m_arg","updateText","UpdateProgress","m_chatBtn","onchatBtn","m_bagBtn","onbagBtn","m_shopBtn","onshopBtn","m_levelBtn","onlevelBtn","MsgPack","retryTimes","reSendInterval","timeoutInterval","maxReSendTimes","_rpcId","requestCallback","connCaback","NiceTS","TService","GetChannel","errorCallback","timeoutIimer","readCallback","onReceive","Connect","rpcid","callBack","lenBuf","sendArray","msgPack","sendTime","Send","msgBuf","msgBytes","currTime","reSend","HeroConfigTB","UnitConfigTB","HeroConfigTR","_BaseATK","_SP","_HP","_AttackInterval","UnitConfigTR","_Desc","_Position","_Height","_Weight"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","const CS = require('csharp');\r\n\r\nimport {GameConfig} from '../../global/GameConfig';\r\n\r\nexport class Logger{\r\n\r\n    public static log(msg:any):void{\r\n        \r\n        if(GameConfig.debug)\r\n            CS.Logger.Log(`${msg}`);\r\n    }\r\n\r\n\r\n    public static logError(msg:any):void{\r\n\r\n        if(GameConfig.debug)\r\n            CS.Logger.LogError(`${msg}`);\r\n\r\n    }\r\n}","module.exports = require(\"csharp\");","\r\n\r\nexport class Singleton<T>{\r\n\r\n    private static instance:any = null;\r\n\r\n    public static Instance<T>( c: { new(): T } ) : T{\r\n\r\n        if(this.instance == null){\r\n            this.instance = new c();\r\n        }\r\n\r\n        return this.instance;\r\n    }\r\n\r\n}","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","export class SceneDef{\r\n\r\n    public static LoadingScene = \"LoadingScene\";\r\n    public static LaunchScene = \"LaunchScene\";\r\n    public static HomeScene = \"HomeScene\";\r\n    public static LoginScene = \"LoginScene\";\r\n    public static BattleScene = \"BattleScene\";\r\n}\r\n\r\n\r\nexport class ModuleDef{\r\n\r\n    public static LoginModule:string = \"LoginModule\";\r\n    public static HomeModule:string = \"HomeModule\";\r\n    public static ShopModule:string = \"ShopModule\";\r\n    public static PVEModule:string = \"PVEModule\";\r\n\r\n}\r\n\r\n\r\nexport class ModuleMessage{\r\n\r\n    public static LOGIN_REAMSERVER:number = 1000;\r\n\r\n}","const CS = require('csharp');\r\nconst csResMgr = CS.Addressable.ResourceManager;\r\n\r\nimport { Singleton } from '../common/Singleton';\r\nimport { Logger } from '../logger/Logger';\r\nimport { $promise } from 'puerts';\r\n\r\n\r\nexport class ResManager extends Singleton<ResManager>{\r\n\r\n    private fblabel :string = \"FB\";\r\n    private static fbcaches : Map<string,any> = new Map<string,any>();;\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        CS.Addressable.ResourceManager.OnFBLoadedHandle = this.onFBLoadedHandle;\r\n    }\r\n\r\n    private onFBLoadedHandle(name, data){\r\n        ResManager.fbcaches.set(name, data);\r\n    }\r\n\r\n    async preloadPBs(){\r\n\r\n        try{\r\n            let task = csResMgr.PreadloadFB(this.fblabel);\r\n            return  await $promise(task);\r\n        }catch(ex){\r\n            Logger.logError(`Load fb error: : ${ex}`)\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public static getFB(name:string){\r\n        return this.fbcaches.get(name);\r\n    }\r\n\r\n    async loadPrefab(address:string){\r\n\r\n        try{\r\n            let task= csResMgr.LoadPrefab(address);\r\n            let go = await $promise(task);\r\n            return go;\r\n        }catch(ex){\r\n\r\n            Logger.logError(`Load prefab :${address} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async loadTextAsset(address:string){\r\n\r\n        try{\r\n            let task = csResMgr.LoadTextAsset(address);\r\n            let go = await $promise(task);\r\n            return go;\r\n        }catch(ex){\r\n            Logger.logError(`Load textasset :${address} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async loadSprite(address:string){\r\n\r\n        try{\r\n            let task = csResMgr.LoadSprite(address);\r\n            let go = await $promise(task);\r\n            return go;\r\n\r\n        }catch(ex){\r\n            Logger.logError(`Load sprite :${address} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    public releaseAddressGO(go:any){\r\n\r\n        csResMgr.ReleaseAddressGO(go);\r\n    }\r\n}","/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\nvar Long = require(\"long\");\n$protobuf.util.Long = Long;\n$protobuf.configure();\n\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.NiceET = (function() {\n\n    /**\n     * Namespace NiceET.\n     * @exports NiceET\n     * @namespace\n     */\n    var NiceET = {};\n\n    NiceET.C2M_TestRequest = (function() {\n\n        /**\n         * Properties of a C2M_TestRequest.\n         * @memberof NiceET\n         * @interface IC2M_TestRequest\n         * @property {number|null} [RpcId] C2M_TestRequest RpcId\n         * @property {number|Long|null} [ActorId] C2M_TestRequest ActorId\n         * @property {string|null} [request] C2M_TestRequest request\n         */\n\n        /**\n         * Constructs a new C2M_TestRequest.\n         * @memberof NiceET\n         * @classdesc Represents a C2M_TestRequest.\n         * @implements IC2M_TestRequest\n         * @constructor\n         * @param {NiceET.IC2M_TestRequest=} [properties] Properties to set\n         */\n        function C2M_TestRequest(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2M_TestRequest RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2M_TestRequest\n         * @instance\n         */\n        C2M_TestRequest.prototype.RpcId = 0;\n\n        /**\n         * C2M_TestRequest ActorId.\n         * @member {number|Long} ActorId\n         * @memberof NiceET.C2M_TestRequest\n         * @instance\n         */\n        C2M_TestRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * C2M_TestRequest request.\n         * @member {string} request\n         * @memberof NiceET.C2M_TestRequest\n         * @instance\n         */\n        C2M_TestRequest.prototype.request = \"\";\n\n        /**\n         * Creates a new C2M_TestRequest instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {NiceET.IC2M_TestRequest=} [properties] Properties to set\n         * @returns {NiceET.C2M_TestRequest} C2M_TestRequest instance\n         */\n        C2M_TestRequest.create = function create(properties) {\n            return new C2M_TestRequest(properties);\n        };\n\n        /**\n         * Encodes the specified C2M_TestRequest message. Does not implicitly {@link NiceET.C2M_TestRequest.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {NiceET.IC2M_TestRequest} message C2M_TestRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_TestRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.request != null && message.hasOwnProperty(\"request\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.request);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                writer.uint32(/* id 93, wireType 0 =*/744).sint64(message.ActorId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2M_TestRequest message, length delimited. Does not implicitly {@link NiceET.C2M_TestRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {NiceET.IC2M_TestRequest} message C2M_TestRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_TestRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2M_TestRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2M_TestRequest} C2M_TestRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_TestRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2M_TestRequest();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 93:\n                    message.ActorId = reader.sint64();\n                    break;\n                case 1:\n                    message.request = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2M_TestRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2M_TestRequest} C2M_TestRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_TestRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2M_TestRequest message.\n         * @function verify\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2M_TestRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (!$util.isInteger(message.ActorId) && !(message.ActorId && $util.isInteger(message.ActorId.low) && $util.isInteger(message.ActorId.high)))\n                    return \"ActorId: integer|Long expected\";\n            if (message.request != null && message.hasOwnProperty(\"request\"))\n                if (!$util.isString(message.request))\n                    return \"request: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2M_TestRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2M_TestRequest} C2M_TestRequest\n         */\n        C2M_TestRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2M_TestRequest)\n                return object;\n            var message = new $root.NiceET.C2M_TestRequest();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.ActorId != null)\n                if ($util.Long)\n                    (message.ActorId = $util.Long.fromValue(object.ActorId)).unsigned = false;\n                else if (typeof object.ActorId === \"string\")\n                    message.ActorId = parseInt(object.ActorId, 10);\n                else if (typeof object.ActorId === \"number\")\n                    message.ActorId = object.ActorId;\n                else if (typeof object.ActorId === \"object\")\n                    message.ActorId = new $util.LongBits(object.ActorId.low >>> 0, object.ActorId.high >>> 0).toNumber();\n            if (object.request != null)\n                message.request = String(object.request);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2M_TestRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2M_TestRequest\n         * @static\n         * @param {NiceET.C2M_TestRequest} message C2M_TestRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2M_TestRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.request = \"\";\n                object.RpcId = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.ActorId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.ActorId = options.longs === String ? \"0\" : 0;\n            }\n            if (message.request != null && message.hasOwnProperty(\"request\"))\n                object.request = message.request;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (typeof message.ActorId === \"number\")\n                    object.ActorId = options.longs === String ? String(message.ActorId) : message.ActorId;\n                else\n                    object.ActorId = options.longs === String ? $util.Long.prototype.toString.call(message.ActorId) : options.longs === Number ? new $util.LongBits(message.ActorId.low >>> 0, message.ActorId.high >>> 0).toNumber() : message.ActorId;\n            return object;\n        };\n\n        /**\n         * Converts this C2M_TestRequest to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2M_TestRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2M_TestRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2M_TestRequest;\n    })();\n\n    NiceET.M2C_TestResponse = (function() {\n\n        /**\n         * Properties of a M2C_TestResponse.\n         * @memberof NiceET\n         * @interface IM2C_TestResponse\n         * @property {number|null} [RpcId] M2C_TestResponse RpcId\n         * @property {number|null} [Error] M2C_TestResponse Error\n         * @property {string|null} [Message] M2C_TestResponse Message\n         * @property {string|null} [response] M2C_TestResponse response\n         */\n\n        /**\n         * Constructs a new M2C_TestResponse.\n         * @memberof NiceET\n         * @classdesc Represents a M2C_TestResponse.\n         * @implements IM2C_TestResponse\n         * @constructor\n         * @param {NiceET.IM2C_TestResponse=} [properties] Properties to set\n         */\n        function M2C_TestResponse(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * M2C_TestResponse RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.RpcId = 0;\n\n        /**\n         * M2C_TestResponse Error.\n         * @member {number} Error\n         * @memberof NiceET.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.Error = 0;\n\n        /**\n         * M2C_TestResponse Message.\n         * @member {string} Message\n         * @memberof NiceET.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.Message = \"\";\n\n        /**\n         * M2C_TestResponse response.\n         * @member {string} response\n         * @memberof NiceET.M2C_TestResponse\n         * @instance\n         */\n        M2C_TestResponse.prototype.response = \"\";\n\n        /**\n         * Creates a new M2C_TestResponse instance using the specified properties.\n         * @function create\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {NiceET.IM2C_TestResponse=} [properties] Properties to set\n         * @returns {NiceET.M2C_TestResponse} M2C_TestResponse instance\n         */\n        M2C_TestResponse.create = function create(properties) {\n            return new M2C_TestResponse(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_TestResponse message. Does not implicitly {@link NiceET.M2C_TestResponse.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {NiceET.IM2C_TestResponse} message M2C_TestResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_TestResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.response != null && message.hasOwnProperty(\"response\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.response);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified M2C_TestResponse message, length delimited. Does not implicitly {@link NiceET.M2C_TestResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {NiceET.IM2C_TestResponse} message M2C_TestResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_TestResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a M2C_TestResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.M2C_TestResponse} M2C_TestResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_TestResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.M2C_TestResponse();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                case 1:\n                    message.response = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a M2C_TestResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.M2C_TestResponse} M2C_TestResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_TestResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a M2C_TestResponse message.\n         * @function verify\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        M2C_TestResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.response != null && message.hasOwnProperty(\"response\"))\n                if (!$util.isString(message.response))\n                    return \"response: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a M2C_TestResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.M2C_TestResponse} M2C_TestResponse\n         */\n        M2C_TestResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.M2C_TestResponse)\n                return object;\n            var message = new $root.NiceET.M2C_TestResponse();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            if (object.response != null)\n                message.response = String(object.response);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a M2C_TestResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.M2C_TestResponse\n         * @static\n         * @param {NiceET.M2C_TestResponse} message M2C_TestResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        M2C_TestResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.response = \"\";\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.response != null && message.hasOwnProperty(\"response\"))\n                object.response = message.response;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this M2C_TestResponse to JSON.\n         * @function toJSON\n         * @memberof NiceET.M2C_TestResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        M2C_TestResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return M2C_TestResponse;\n    })();\n\n    NiceET.Actor_TransferRequest = (function() {\n\n        /**\n         * Properties of an Actor_TransferRequest.\n         * @memberof NiceET\n         * @interface IActor_TransferRequest\n         * @property {number|null} [RpcId] Actor_TransferRequest RpcId\n         * @property {number|Long|null} [ActorId] Actor_TransferRequest ActorId\n         * @property {number|null} [MapIndex] Actor_TransferRequest MapIndex\n         */\n\n        /**\n         * Constructs a new Actor_TransferRequest.\n         * @memberof NiceET\n         * @classdesc Represents an Actor_TransferRequest.\n         * @implements IActor_TransferRequest\n         * @constructor\n         * @param {NiceET.IActor_TransferRequest=} [properties] Properties to set\n         */\n        function Actor_TransferRequest(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Actor_TransferRequest RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.Actor_TransferRequest\n         * @instance\n         */\n        Actor_TransferRequest.prototype.RpcId = 0;\n\n        /**\n         * Actor_TransferRequest ActorId.\n         * @member {number|Long} ActorId\n         * @memberof NiceET.Actor_TransferRequest\n         * @instance\n         */\n        Actor_TransferRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Actor_TransferRequest MapIndex.\n         * @member {number} MapIndex\n         * @memberof NiceET.Actor_TransferRequest\n         * @instance\n         */\n        Actor_TransferRequest.prototype.MapIndex = 0;\n\n        /**\n         * Creates a new Actor_TransferRequest instance using the specified properties.\n         * @function create\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {NiceET.IActor_TransferRequest=} [properties] Properties to set\n         * @returns {NiceET.Actor_TransferRequest} Actor_TransferRequest instance\n         */\n        Actor_TransferRequest.create = function create(properties) {\n            return new Actor_TransferRequest(properties);\n        };\n\n        /**\n         * Encodes the specified Actor_TransferRequest message. Does not implicitly {@link NiceET.Actor_TransferRequest.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {NiceET.IActor_TransferRequest} message Actor_TransferRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Actor_TransferRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.MapIndex != null && message.hasOwnProperty(\"MapIndex\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.MapIndex);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                writer.uint32(/* id 93, wireType 0 =*/744).sint64(message.ActorId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Actor_TransferRequest message, length delimited. Does not implicitly {@link NiceET.Actor_TransferRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {NiceET.IActor_TransferRequest} message Actor_TransferRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Actor_TransferRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an Actor_TransferRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.Actor_TransferRequest} Actor_TransferRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Actor_TransferRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.Actor_TransferRequest();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 93:\n                    message.ActorId = reader.sint64();\n                    break;\n                case 1:\n                    message.MapIndex = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an Actor_TransferRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.Actor_TransferRequest} Actor_TransferRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Actor_TransferRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an Actor_TransferRequest message.\n         * @function verify\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Actor_TransferRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (!$util.isInteger(message.ActorId) && !(message.ActorId && $util.isInteger(message.ActorId.low) && $util.isInteger(message.ActorId.high)))\n                    return \"ActorId: integer|Long expected\";\n            if (message.MapIndex != null && message.hasOwnProperty(\"MapIndex\"))\n                if (!$util.isInteger(message.MapIndex))\n                    return \"MapIndex: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates an Actor_TransferRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.Actor_TransferRequest} Actor_TransferRequest\n         */\n        Actor_TransferRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.Actor_TransferRequest)\n                return object;\n            var message = new $root.NiceET.Actor_TransferRequest();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.ActorId != null)\n                if ($util.Long)\n                    (message.ActorId = $util.Long.fromValue(object.ActorId)).unsigned = false;\n                else if (typeof object.ActorId === \"string\")\n                    message.ActorId = parseInt(object.ActorId, 10);\n                else if (typeof object.ActorId === \"number\")\n                    message.ActorId = object.ActorId;\n                else if (typeof object.ActorId === \"object\")\n                    message.ActorId = new $util.LongBits(object.ActorId.low >>> 0, object.ActorId.high >>> 0).toNumber();\n            if (object.MapIndex != null)\n                message.MapIndex = object.MapIndex | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an Actor_TransferRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.Actor_TransferRequest\n         * @static\n         * @param {NiceET.Actor_TransferRequest} message Actor_TransferRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Actor_TransferRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.MapIndex = 0;\n                object.RpcId = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.ActorId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.ActorId = options.longs === String ? \"0\" : 0;\n            }\n            if (message.MapIndex != null && message.hasOwnProperty(\"MapIndex\"))\n                object.MapIndex = message.MapIndex;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (typeof message.ActorId === \"number\")\n                    object.ActorId = options.longs === String ? String(message.ActorId) : message.ActorId;\n                else\n                    object.ActorId = options.longs === String ? $util.Long.prototype.toString.call(message.ActorId) : options.longs === Number ? new $util.LongBits(message.ActorId.low >>> 0, message.ActorId.high >>> 0).toNumber() : message.ActorId;\n            return object;\n        };\n\n        /**\n         * Converts this Actor_TransferRequest to JSON.\n         * @function toJSON\n         * @memberof NiceET.Actor_TransferRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Actor_TransferRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Actor_TransferRequest;\n    })();\n\n    NiceET.Actor_TransferResponse = (function() {\n\n        /**\n         * Properties of an Actor_TransferResponse.\n         * @memberof NiceET\n         * @interface IActor_TransferResponse\n         * @property {number|null} [RpcId] Actor_TransferResponse RpcId\n         * @property {number|null} [Error] Actor_TransferResponse Error\n         * @property {string|null} [Message] Actor_TransferResponse Message\n         */\n\n        /**\n         * Constructs a new Actor_TransferResponse.\n         * @memberof NiceET\n         * @classdesc Represents an Actor_TransferResponse.\n         * @implements IActor_TransferResponse\n         * @constructor\n         * @param {NiceET.IActor_TransferResponse=} [properties] Properties to set\n         */\n        function Actor_TransferResponse(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Actor_TransferResponse RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.Actor_TransferResponse\n         * @instance\n         */\n        Actor_TransferResponse.prototype.RpcId = 0;\n\n        /**\n         * Actor_TransferResponse Error.\n         * @member {number} Error\n         * @memberof NiceET.Actor_TransferResponse\n         * @instance\n         */\n        Actor_TransferResponse.prototype.Error = 0;\n\n        /**\n         * Actor_TransferResponse Message.\n         * @member {string} Message\n         * @memberof NiceET.Actor_TransferResponse\n         * @instance\n         */\n        Actor_TransferResponse.prototype.Message = \"\";\n\n        /**\n         * Creates a new Actor_TransferResponse instance using the specified properties.\n         * @function create\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {NiceET.IActor_TransferResponse=} [properties] Properties to set\n         * @returns {NiceET.Actor_TransferResponse} Actor_TransferResponse instance\n         */\n        Actor_TransferResponse.create = function create(properties) {\n            return new Actor_TransferResponse(properties);\n        };\n\n        /**\n         * Encodes the specified Actor_TransferResponse message. Does not implicitly {@link NiceET.Actor_TransferResponse.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {NiceET.IActor_TransferResponse} message Actor_TransferResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Actor_TransferResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Actor_TransferResponse message, length delimited. Does not implicitly {@link NiceET.Actor_TransferResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {NiceET.IActor_TransferResponse} message Actor_TransferResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Actor_TransferResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an Actor_TransferResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.Actor_TransferResponse} Actor_TransferResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Actor_TransferResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.Actor_TransferResponse();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an Actor_TransferResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.Actor_TransferResponse} Actor_TransferResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Actor_TransferResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an Actor_TransferResponse message.\n         * @function verify\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Actor_TransferResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates an Actor_TransferResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.Actor_TransferResponse} Actor_TransferResponse\n         */\n        Actor_TransferResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.Actor_TransferResponse)\n                return object;\n            var message = new $root.NiceET.Actor_TransferResponse();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an Actor_TransferResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.Actor_TransferResponse\n         * @static\n         * @param {NiceET.Actor_TransferResponse} message Actor_TransferResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Actor_TransferResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this Actor_TransferResponse to JSON.\n         * @function toJSON\n         * @memberof NiceET.Actor_TransferResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Actor_TransferResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Actor_TransferResponse;\n    })();\n\n    NiceET.C2G_EnterMap = (function() {\n\n        /**\n         * Properties of a C2G_EnterMap.\n         * @memberof NiceET\n         * @interface IC2G_EnterMap\n         * @property {number|null} [RpcId] C2G_EnterMap RpcId\n         */\n\n        /**\n         * Constructs a new C2G_EnterMap.\n         * @memberof NiceET\n         * @classdesc Represents a C2G_EnterMap.\n         * @implements IC2G_EnterMap\n         * @constructor\n         * @param {NiceET.IC2G_EnterMap=} [properties] Properties to set\n         */\n        function C2G_EnterMap(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2G_EnterMap RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2G_EnterMap\n         * @instance\n         */\n        C2G_EnterMap.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2G_EnterMap instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {NiceET.IC2G_EnterMap=} [properties] Properties to set\n         * @returns {NiceET.C2G_EnterMap} C2G_EnterMap instance\n         */\n        C2G_EnterMap.create = function create(properties) {\n            return new C2G_EnterMap(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_EnterMap message. Does not implicitly {@link NiceET.C2G_EnterMap.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {NiceET.IC2G_EnterMap} message C2G_EnterMap message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_EnterMap.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2G_EnterMap message, length delimited. Does not implicitly {@link NiceET.C2G_EnterMap.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {NiceET.IC2G_EnterMap} message C2G_EnterMap message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_EnterMap.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2G_EnterMap message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2G_EnterMap} C2G_EnterMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_EnterMap.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2G_EnterMap();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2G_EnterMap message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2G_EnterMap} C2G_EnterMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_EnterMap.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2G_EnterMap message.\n         * @function verify\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2G_EnterMap.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2G_EnterMap message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2G_EnterMap} C2G_EnterMap\n         */\n        C2G_EnterMap.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2G_EnterMap)\n                return object;\n            var message = new $root.NiceET.C2G_EnterMap();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2G_EnterMap message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2G_EnterMap\n         * @static\n         * @param {NiceET.C2G_EnterMap} message C2G_EnterMap\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2G_EnterMap.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.RpcId = 0;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this C2G_EnterMap to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2G_EnterMap\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2G_EnterMap.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2G_EnterMap;\n    })();\n\n    NiceET.G2C_EnterMap = (function() {\n\n        /**\n         * Properties of a G2C_EnterMap.\n         * @memberof NiceET\n         * @interface IG2C_EnterMap\n         * @property {number|null} [RpcId] G2C_EnterMap RpcId\n         * @property {number|null} [Error] G2C_EnterMap Error\n         * @property {string|null} [Message] G2C_EnterMap Message\n         * @property {number|Long|null} [UnitId] G2C_EnterMap UnitId\n         * @property {Array.<NiceET.IUnitInfo>|null} [Units] G2C_EnterMap Units\n         */\n\n        /**\n         * Constructs a new G2C_EnterMap.\n         * @memberof NiceET\n         * @classdesc Represents a G2C_EnterMap.\n         * @implements IG2C_EnterMap\n         * @constructor\n         * @param {NiceET.IG2C_EnterMap=} [properties] Properties to set\n         */\n        function G2C_EnterMap(properties) {\n            this.Units = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * G2C_EnterMap RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.RpcId = 0;\n\n        /**\n         * G2C_EnterMap Error.\n         * @member {number} Error\n         * @memberof NiceET.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.Error = 0;\n\n        /**\n         * G2C_EnterMap Message.\n         * @member {string} Message\n         * @memberof NiceET.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.Message = \"\";\n\n        /**\n         * G2C_EnterMap UnitId.\n         * @member {number|Long} UnitId\n         * @memberof NiceET.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.UnitId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * G2C_EnterMap Units.\n         * @member {Array.<NiceET.IUnitInfo>} Units\n         * @memberof NiceET.G2C_EnterMap\n         * @instance\n         */\n        G2C_EnterMap.prototype.Units = $util.emptyArray;\n\n        /**\n         * Creates a new G2C_EnterMap instance using the specified properties.\n         * @function create\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {NiceET.IG2C_EnterMap=} [properties] Properties to set\n         * @returns {NiceET.G2C_EnterMap} G2C_EnterMap instance\n         */\n        G2C_EnterMap.create = function create(properties) {\n            return new G2C_EnterMap(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_EnterMap message. Does not implicitly {@link NiceET.G2C_EnterMap.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {NiceET.IG2C_EnterMap} message G2C_EnterMap message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_EnterMap.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.UnitId != null && message.hasOwnProperty(\"UnitId\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).sint64(message.UnitId);\n            if (message.Units != null && message.Units.length)\n                for (var i = 0; i < message.Units.length; ++i)\n                    $root.NiceET.UnitInfo.encode(message.Units[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified G2C_EnterMap message, length delimited. Does not implicitly {@link NiceET.G2C_EnterMap.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {NiceET.IG2C_EnterMap} message G2C_EnterMap message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_EnterMap.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a G2C_EnterMap message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.G2C_EnterMap} G2C_EnterMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_EnterMap.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.G2C_EnterMap();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                case 1:\n                    message.UnitId = reader.sint64();\n                    break;\n                case 2:\n                    if (!(message.Units && message.Units.length))\n                        message.Units = [];\n                    message.Units.push($root.NiceET.UnitInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a G2C_EnterMap message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.G2C_EnterMap} G2C_EnterMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_EnterMap.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a G2C_EnterMap message.\n         * @function verify\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        G2C_EnterMap.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.UnitId != null && message.hasOwnProperty(\"UnitId\"))\n                if (!$util.isInteger(message.UnitId) && !(message.UnitId && $util.isInteger(message.UnitId.low) && $util.isInteger(message.UnitId.high)))\n                    return \"UnitId: integer|Long expected\";\n            if (message.Units != null && message.hasOwnProperty(\"Units\")) {\n                if (!Array.isArray(message.Units))\n                    return \"Units: array expected\";\n                for (var i = 0; i < message.Units.length; ++i) {\n                    var error = $root.NiceET.UnitInfo.verify(message.Units[i]);\n                    if (error)\n                        return \"Units.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a G2C_EnterMap message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.G2C_EnterMap} G2C_EnterMap\n         */\n        G2C_EnterMap.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.G2C_EnterMap)\n                return object;\n            var message = new $root.NiceET.G2C_EnterMap();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            if (object.UnitId != null)\n                if ($util.Long)\n                    (message.UnitId = $util.Long.fromValue(object.UnitId)).unsigned = false;\n                else if (typeof object.UnitId === \"string\")\n                    message.UnitId = parseInt(object.UnitId, 10);\n                else if (typeof object.UnitId === \"number\")\n                    message.UnitId = object.UnitId;\n                else if (typeof object.UnitId === \"object\")\n                    message.UnitId = new $util.LongBits(object.UnitId.low >>> 0, object.UnitId.high >>> 0).toNumber();\n            if (object.Units) {\n                if (!Array.isArray(object.Units))\n                    throw TypeError(\".NiceET.G2C_EnterMap.Units: array expected\");\n                message.Units = [];\n                for (var i = 0; i < object.Units.length; ++i) {\n                    if (typeof object.Units[i] !== \"object\")\n                        throw TypeError(\".NiceET.G2C_EnterMap.Units: object expected\");\n                    message.Units[i] = $root.NiceET.UnitInfo.fromObject(object.Units[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a G2C_EnterMap message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.G2C_EnterMap\n         * @static\n         * @param {NiceET.G2C_EnterMap} message G2C_EnterMap\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        G2C_EnterMap.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.Units = [];\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.UnitId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.UnitId = options.longs === String ? \"0\" : 0;\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.UnitId != null && message.hasOwnProperty(\"UnitId\"))\n                if (typeof message.UnitId === \"number\")\n                    object.UnitId = options.longs === String ? String(message.UnitId) : message.UnitId;\n                else\n                    object.UnitId = options.longs === String ? $util.Long.prototype.toString.call(message.UnitId) : options.longs === Number ? new $util.LongBits(message.UnitId.low >>> 0, message.UnitId.high >>> 0).toNumber() : message.UnitId;\n            if (message.Units && message.Units.length) {\n                object.Units = [];\n                for (var j = 0; j < message.Units.length; ++j)\n                    object.Units[j] = $root.NiceET.UnitInfo.toObject(message.Units[j], options);\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this G2C_EnterMap to JSON.\n         * @function toJSON\n         * @memberof NiceET.G2C_EnterMap\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        G2C_EnterMap.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return G2C_EnterMap;\n    })();\n\n    NiceET.UnitInfo = (function() {\n\n        /**\n         * Properties of an UnitInfo.\n         * @memberof NiceET\n         * @interface IUnitInfo\n         * @property {number|Long|null} [UnitId] UnitInfo UnitId\n         * @property {number|null} [X] UnitInfo X\n         * @property {number|null} [Y] UnitInfo Y\n         * @property {number|null} [Z] UnitInfo Z\n         */\n\n        /**\n         * Constructs a new UnitInfo.\n         * @memberof NiceET\n         * @classdesc Represents an UnitInfo.\n         * @implements IUnitInfo\n         * @constructor\n         * @param {NiceET.IUnitInfo=} [properties] Properties to set\n         */\n        function UnitInfo(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * UnitInfo UnitId.\n         * @member {number|Long} UnitId\n         * @memberof NiceET.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.UnitId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * UnitInfo X.\n         * @member {number} X\n         * @memberof NiceET.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.X = 0;\n\n        /**\n         * UnitInfo Y.\n         * @member {number} Y\n         * @memberof NiceET.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.Y = 0;\n\n        /**\n         * UnitInfo Z.\n         * @member {number} Z\n         * @memberof NiceET.UnitInfo\n         * @instance\n         */\n        UnitInfo.prototype.Z = 0;\n\n        /**\n         * Creates a new UnitInfo instance using the specified properties.\n         * @function create\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {NiceET.IUnitInfo=} [properties] Properties to set\n         * @returns {NiceET.UnitInfo} UnitInfo instance\n         */\n        UnitInfo.create = function create(properties) {\n            return new UnitInfo(properties);\n        };\n\n        /**\n         * Encodes the specified UnitInfo message. Does not implicitly {@link NiceET.UnitInfo.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {NiceET.IUnitInfo} message UnitInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UnitInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.UnitId != null && message.hasOwnProperty(\"UnitId\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).sint64(message.UnitId);\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.X);\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.Y);\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.Z);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified UnitInfo message, length delimited. Does not implicitly {@link NiceET.UnitInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {NiceET.IUnitInfo} message UnitInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        UnitInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an UnitInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.UnitInfo} UnitInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UnitInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.UnitInfo();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.UnitId = reader.sint64();\n                    break;\n                case 2:\n                    message.X = reader.float();\n                    break;\n                case 3:\n                    message.Y = reader.float();\n                    break;\n                case 4:\n                    message.Z = reader.float();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an UnitInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.UnitInfo} UnitInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        UnitInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an UnitInfo message.\n         * @function verify\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        UnitInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.UnitId != null && message.hasOwnProperty(\"UnitId\"))\n                if (!$util.isInteger(message.UnitId) && !(message.UnitId && $util.isInteger(message.UnitId.low) && $util.isInteger(message.UnitId.high)))\n                    return \"UnitId: integer|Long expected\";\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                if (typeof message.X !== \"number\")\n                    return \"X: number expected\";\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                if (typeof message.Y !== \"number\")\n                    return \"Y: number expected\";\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                if (typeof message.Z !== \"number\")\n                    return \"Z: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates an UnitInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.UnitInfo} UnitInfo\n         */\n        UnitInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.UnitInfo)\n                return object;\n            var message = new $root.NiceET.UnitInfo();\n            if (object.UnitId != null)\n                if ($util.Long)\n                    (message.UnitId = $util.Long.fromValue(object.UnitId)).unsigned = false;\n                else if (typeof object.UnitId === \"string\")\n                    message.UnitId = parseInt(object.UnitId, 10);\n                else if (typeof object.UnitId === \"number\")\n                    message.UnitId = object.UnitId;\n                else if (typeof object.UnitId === \"object\")\n                    message.UnitId = new $util.LongBits(object.UnitId.low >>> 0, object.UnitId.high >>> 0).toNumber();\n            if (object.X != null)\n                message.X = Number(object.X);\n            if (object.Y != null)\n                message.Y = Number(object.Y);\n            if (object.Z != null)\n                message.Z = Number(object.Z);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an UnitInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.UnitInfo\n         * @static\n         * @param {NiceET.UnitInfo} message UnitInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        UnitInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.UnitId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.UnitId = options.longs === String ? \"0\" : 0;\n                object.X = 0;\n                object.Y = 0;\n                object.Z = 0;\n            }\n            if (message.UnitId != null && message.hasOwnProperty(\"UnitId\"))\n                if (typeof message.UnitId === \"number\")\n                    object.UnitId = options.longs === String ? String(message.UnitId) : message.UnitId;\n                else\n                    object.UnitId = options.longs === String ? $util.Long.prototype.toString.call(message.UnitId) : options.longs === Number ? new $util.LongBits(message.UnitId.low >>> 0, message.UnitId.high >>> 0).toNumber() : message.UnitId;\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                object.X = options.json && !isFinite(message.X) ? String(message.X) : message.X;\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                object.Y = options.json && !isFinite(message.Y) ? String(message.Y) : message.Y;\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                object.Z = options.json && !isFinite(message.Z) ? String(message.Z) : message.Z;\n            return object;\n        };\n\n        /**\n         * Converts this UnitInfo to JSON.\n         * @function toJSON\n         * @memberof NiceET.UnitInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        UnitInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return UnitInfo;\n    })();\n\n    NiceET.M2C_CreateUnits = (function() {\n\n        /**\n         * Properties of a M2C_CreateUnits.\n         * @memberof NiceET\n         * @interface IM2C_CreateUnits\n         * @property {number|null} [RpcId] M2C_CreateUnits RpcId\n         * @property {number|Long|null} [ActorId] M2C_CreateUnits ActorId\n         * @property {Array.<NiceET.IUnitInfo>|null} [Units] M2C_CreateUnits Units\n         */\n\n        /**\n         * Constructs a new M2C_CreateUnits.\n         * @memberof NiceET\n         * @classdesc Represents a M2C_CreateUnits.\n         * @implements IM2C_CreateUnits\n         * @constructor\n         * @param {NiceET.IM2C_CreateUnits=} [properties] Properties to set\n         */\n        function M2C_CreateUnits(properties) {\n            this.Units = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * M2C_CreateUnits RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.M2C_CreateUnits\n         * @instance\n         */\n        M2C_CreateUnits.prototype.RpcId = 0;\n\n        /**\n         * M2C_CreateUnits ActorId.\n         * @member {number|Long} ActorId\n         * @memberof NiceET.M2C_CreateUnits\n         * @instance\n         */\n        M2C_CreateUnits.prototype.ActorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * M2C_CreateUnits Units.\n         * @member {Array.<NiceET.IUnitInfo>} Units\n         * @memberof NiceET.M2C_CreateUnits\n         * @instance\n         */\n        M2C_CreateUnits.prototype.Units = $util.emptyArray;\n\n        /**\n         * Creates a new M2C_CreateUnits instance using the specified properties.\n         * @function create\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {NiceET.IM2C_CreateUnits=} [properties] Properties to set\n         * @returns {NiceET.M2C_CreateUnits} M2C_CreateUnits instance\n         */\n        M2C_CreateUnits.create = function create(properties) {\n            return new M2C_CreateUnits(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_CreateUnits message. Does not implicitly {@link NiceET.M2C_CreateUnits.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {NiceET.IM2C_CreateUnits} message M2C_CreateUnits message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_CreateUnits.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Units != null && message.Units.length)\n                for (var i = 0; i < message.Units.length; ++i)\n                    $root.NiceET.UnitInfo.encode(message.Units[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                writer.uint32(/* id 93, wireType 0 =*/744).sint64(message.ActorId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified M2C_CreateUnits message, length delimited. Does not implicitly {@link NiceET.M2C_CreateUnits.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {NiceET.IM2C_CreateUnits} message M2C_CreateUnits message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_CreateUnits.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a M2C_CreateUnits message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.M2C_CreateUnits} M2C_CreateUnits\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_CreateUnits.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.M2C_CreateUnits();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 93:\n                    message.ActorId = reader.sint64();\n                    break;\n                case 1:\n                    if (!(message.Units && message.Units.length))\n                        message.Units = [];\n                    message.Units.push($root.NiceET.UnitInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a M2C_CreateUnits message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.M2C_CreateUnits} M2C_CreateUnits\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_CreateUnits.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a M2C_CreateUnits message.\n         * @function verify\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        M2C_CreateUnits.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (!$util.isInteger(message.ActorId) && !(message.ActorId && $util.isInteger(message.ActorId.low) && $util.isInteger(message.ActorId.high)))\n                    return \"ActorId: integer|Long expected\";\n            if (message.Units != null && message.hasOwnProperty(\"Units\")) {\n                if (!Array.isArray(message.Units))\n                    return \"Units: array expected\";\n                for (var i = 0; i < message.Units.length; ++i) {\n                    var error = $root.NiceET.UnitInfo.verify(message.Units[i]);\n                    if (error)\n                        return \"Units.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a M2C_CreateUnits message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.M2C_CreateUnits} M2C_CreateUnits\n         */\n        M2C_CreateUnits.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.M2C_CreateUnits)\n                return object;\n            var message = new $root.NiceET.M2C_CreateUnits();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.ActorId != null)\n                if ($util.Long)\n                    (message.ActorId = $util.Long.fromValue(object.ActorId)).unsigned = false;\n                else if (typeof object.ActorId === \"string\")\n                    message.ActorId = parseInt(object.ActorId, 10);\n                else if (typeof object.ActorId === \"number\")\n                    message.ActorId = object.ActorId;\n                else if (typeof object.ActorId === \"object\")\n                    message.ActorId = new $util.LongBits(object.ActorId.low >>> 0, object.ActorId.high >>> 0).toNumber();\n            if (object.Units) {\n                if (!Array.isArray(object.Units))\n                    throw TypeError(\".NiceET.M2C_CreateUnits.Units: array expected\");\n                message.Units = [];\n                for (var i = 0; i < object.Units.length; ++i) {\n                    if (typeof object.Units[i] !== \"object\")\n                        throw TypeError(\".NiceET.M2C_CreateUnits.Units: object expected\");\n                    message.Units[i] = $root.NiceET.UnitInfo.fromObject(object.Units[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a M2C_CreateUnits message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.M2C_CreateUnits\n         * @static\n         * @param {NiceET.M2C_CreateUnits} message M2C_CreateUnits\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        M2C_CreateUnits.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.Units = [];\n            if (options.defaults) {\n                object.RpcId = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.ActorId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.ActorId = options.longs === String ? \"0\" : 0;\n            }\n            if (message.Units && message.Units.length) {\n                object.Units = [];\n                for (var j = 0; j < message.Units.length; ++j)\n                    object.Units[j] = $root.NiceET.UnitInfo.toObject(message.Units[j], options);\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (typeof message.ActorId === \"number\")\n                    object.ActorId = options.longs === String ? String(message.ActorId) : message.ActorId;\n                else\n                    object.ActorId = options.longs === String ? $util.Long.prototype.toString.call(message.ActorId) : options.longs === Number ? new $util.LongBits(message.ActorId.low >>> 0, message.ActorId.high >>> 0).toNumber() : message.ActorId;\n            return object;\n        };\n\n        /**\n         * Converts this M2C_CreateUnits to JSON.\n         * @function toJSON\n         * @memberof NiceET.M2C_CreateUnits\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        M2C_CreateUnits.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return M2C_CreateUnits;\n    })();\n\n    NiceET.Frame_ClickMap = (function() {\n\n        /**\n         * Properties of a Frame_ClickMap.\n         * @memberof NiceET\n         * @interface IFrame_ClickMap\n         * @property {number|null} [RpcId] Frame_ClickMap RpcId\n         * @property {number|Long|null} [ActorId] Frame_ClickMap ActorId\n         * @property {number|Long|null} [Id] Frame_ClickMap Id\n         * @property {number|null} [X] Frame_ClickMap X\n         * @property {number|null} [Y] Frame_ClickMap Y\n         * @property {number|null} [Z] Frame_ClickMap Z\n         */\n\n        /**\n         * Constructs a new Frame_ClickMap.\n         * @memberof NiceET\n         * @classdesc Represents a Frame_ClickMap.\n         * @implements IFrame_ClickMap\n         * @constructor\n         * @param {NiceET.IFrame_ClickMap=} [properties] Properties to set\n         */\n        function Frame_ClickMap(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Frame_ClickMap RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.RpcId = 0;\n\n        /**\n         * Frame_ClickMap ActorId.\n         * @member {number|Long} ActorId\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.ActorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Frame_ClickMap Id.\n         * @member {number|Long} Id\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.Id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Frame_ClickMap X.\n         * @member {number} X\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.X = 0;\n\n        /**\n         * Frame_ClickMap Y.\n         * @member {number} Y\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.Y = 0;\n\n        /**\n         * Frame_ClickMap Z.\n         * @member {number} Z\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         */\n        Frame_ClickMap.prototype.Z = 0;\n\n        /**\n         * Creates a new Frame_ClickMap instance using the specified properties.\n         * @function create\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {NiceET.IFrame_ClickMap=} [properties] Properties to set\n         * @returns {NiceET.Frame_ClickMap} Frame_ClickMap instance\n         */\n        Frame_ClickMap.create = function create(properties) {\n            return new Frame_ClickMap(properties);\n        };\n\n        /**\n         * Encodes the specified Frame_ClickMap message. Does not implicitly {@link NiceET.Frame_ClickMap.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {NiceET.IFrame_ClickMap} message Frame_ClickMap message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Frame_ClickMap.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.X);\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.Y);\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.Z);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                writer.uint32(/* id 93, wireType 0 =*/744).sint64(message.ActorId);\n            if (message.Id != null && message.hasOwnProperty(\"Id\"))\n                writer.uint32(/* id 94, wireType 0 =*/752).sint64(message.Id);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified Frame_ClickMap message, length delimited. Does not implicitly {@link NiceET.Frame_ClickMap.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {NiceET.IFrame_ClickMap} message Frame_ClickMap message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Frame_ClickMap.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a Frame_ClickMap message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.Frame_ClickMap} Frame_ClickMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Frame_ClickMap.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.Frame_ClickMap();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 93:\n                    message.ActorId = reader.sint64();\n                    break;\n                case 94:\n                    message.Id = reader.sint64();\n                    break;\n                case 1:\n                    message.X = reader.float();\n                    break;\n                case 2:\n                    message.Y = reader.float();\n                    break;\n                case 3:\n                    message.Z = reader.float();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a Frame_ClickMap message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.Frame_ClickMap} Frame_ClickMap\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Frame_ClickMap.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a Frame_ClickMap message.\n         * @function verify\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        Frame_ClickMap.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (!$util.isInteger(message.ActorId) && !(message.ActorId && $util.isInteger(message.ActorId.low) && $util.isInteger(message.ActorId.high)))\n                    return \"ActorId: integer|Long expected\";\n            if (message.Id != null && message.hasOwnProperty(\"Id\"))\n                if (!$util.isInteger(message.Id) && !(message.Id && $util.isInteger(message.Id.low) && $util.isInteger(message.Id.high)))\n                    return \"Id: integer|Long expected\";\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                if (typeof message.X !== \"number\")\n                    return \"X: number expected\";\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                if (typeof message.Y !== \"number\")\n                    return \"Y: number expected\";\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                if (typeof message.Z !== \"number\")\n                    return \"Z: number expected\";\n            return null;\n        };\n\n        /**\n         * Creates a Frame_ClickMap message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.Frame_ClickMap} Frame_ClickMap\n         */\n        Frame_ClickMap.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.Frame_ClickMap)\n                return object;\n            var message = new $root.NiceET.Frame_ClickMap();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.ActorId != null)\n                if ($util.Long)\n                    (message.ActorId = $util.Long.fromValue(object.ActorId)).unsigned = false;\n                else if (typeof object.ActorId === \"string\")\n                    message.ActorId = parseInt(object.ActorId, 10);\n                else if (typeof object.ActorId === \"number\")\n                    message.ActorId = object.ActorId;\n                else if (typeof object.ActorId === \"object\")\n                    message.ActorId = new $util.LongBits(object.ActorId.low >>> 0, object.ActorId.high >>> 0).toNumber();\n            if (object.Id != null)\n                if ($util.Long)\n                    (message.Id = $util.Long.fromValue(object.Id)).unsigned = false;\n                else if (typeof object.Id === \"string\")\n                    message.Id = parseInt(object.Id, 10);\n                else if (typeof object.Id === \"number\")\n                    message.Id = object.Id;\n                else if (typeof object.Id === \"object\")\n                    message.Id = new $util.LongBits(object.Id.low >>> 0, object.Id.high >>> 0).toNumber();\n            if (object.X != null)\n                message.X = Number(object.X);\n            if (object.Y != null)\n                message.Y = Number(object.Y);\n            if (object.Z != null)\n                message.Z = Number(object.Z);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a Frame_ClickMap message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.Frame_ClickMap\n         * @static\n         * @param {NiceET.Frame_ClickMap} message Frame_ClickMap\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Frame_ClickMap.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.X = 0;\n                object.Y = 0;\n                object.Z = 0;\n                object.RpcId = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.ActorId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.ActorId = options.longs === String ? \"0\" : 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.Id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Id = options.longs === String ? \"0\" : 0;\n            }\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                object.X = options.json && !isFinite(message.X) ? String(message.X) : message.X;\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                object.Y = options.json && !isFinite(message.Y) ? String(message.Y) : message.Y;\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                object.Z = options.json && !isFinite(message.Z) ? String(message.Z) : message.Z;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (typeof message.ActorId === \"number\")\n                    object.ActorId = options.longs === String ? String(message.ActorId) : message.ActorId;\n                else\n                    object.ActorId = options.longs === String ? $util.Long.prototype.toString.call(message.ActorId) : options.longs === Number ? new $util.LongBits(message.ActorId.low >>> 0, message.ActorId.high >>> 0).toNumber() : message.ActorId;\n            if (message.Id != null && message.hasOwnProperty(\"Id\"))\n                if (typeof message.Id === \"number\")\n                    object.Id = options.longs === String ? String(message.Id) : message.Id;\n                else\n                    object.Id = options.longs === String ? $util.Long.prototype.toString.call(message.Id) : options.longs === Number ? new $util.LongBits(message.Id.low >>> 0, message.Id.high >>> 0).toNumber() : message.Id;\n            return object;\n        };\n\n        /**\n         * Converts this Frame_ClickMap to JSON.\n         * @function toJSON\n         * @memberof NiceET.Frame_ClickMap\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Frame_ClickMap.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Frame_ClickMap;\n    })();\n\n    NiceET.M2C_PathfindingResult = (function() {\n\n        /**\n         * Properties of a M2C_PathfindingResult.\n         * @memberof NiceET\n         * @interface IM2C_PathfindingResult\n         * @property {number|Long|null} [ActorId] M2C_PathfindingResult ActorId\n         * @property {number|Long|null} [Id] M2C_PathfindingResult Id\n         * @property {number|null} [X] M2C_PathfindingResult X\n         * @property {number|null} [Y] M2C_PathfindingResult Y\n         * @property {number|null} [Z] M2C_PathfindingResult Z\n         * @property {Array.<number>|null} [Xs] M2C_PathfindingResult Xs\n         * @property {Array.<number>|null} [Ys] M2C_PathfindingResult Ys\n         * @property {Array.<number>|null} [Zs] M2C_PathfindingResult Zs\n         */\n\n        /**\n         * Constructs a new M2C_PathfindingResult.\n         * @memberof NiceET\n         * @classdesc Represents a M2C_PathfindingResult.\n         * @implements IM2C_PathfindingResult\n         * @constructor\n         * @param {NiceET.IM2C_PathfindingResult=} [properties] Properties to set\n         */\n        function M2C_PathfindingResult(properties) {\n            this.Xs = [];\n            this.Ys = [];\n            this.Zs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * M2C_PathfindingResult ActorId.\n         * @member {number|Long} ActorId\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.ActorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * M2C_PathfindingResult Id.\n         * @member {number|Long} Id\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * M2C_PathfindingResult X.\n         * @member {number} X\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.X = 0;\n\n        /**\n         * M2C_PathfindingResult Y.\n         * @member {number} Y\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Y = 0;\n\n        /**\n         * M2C_PathfindingResult Z.\n         * @member {number} Z\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Z = 0;\n\n        /**\n         * M2C_PathfindingResult Xs.\n         * @member {Array.<number>} Xs\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Xs = $util.emptyArray;\n\n        /**\n         * M2C_PathfindingResult Ys.\n         * @member {Array.<number>} Ys\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Ys = $util.emptyArray;\n\n        /**\n         * M2C_PathfindingResult Zs.\n         * @member {Array.<number>} Zs\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         */\n        M2C_PathfindingResult.prototype.Zs = $util.emptyArray;\n\n        /**\n         * Creates a new M2C_PathfindingResult instance using the specified properties.\n         * @function create\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {NiceET.IM2C_PathfindingResult=} [properties] Properties to set\n         * @returns {NiceET.M2C_PathfindingResult} M2C_PathfindingResult instance\n         */\n        M2C_PathfindingResult.create = function create(properties) {\n            return new M2C_PathfindingResult(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_PathfindingResult message. Does not implicitly {@link NiceET.M2C_PathfindingResult.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {NiceET.IM2C_PathfindingResult} message M2C_PathfindingResult message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_PathfindingResult.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Id != null && message.hasOwnProperty(\"Id\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).sint64(message.Id);\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.X);\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.Y);\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.Z);\n            if (message.Xs != null && message.Xs.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.Xs.length; ++i)\n                    writer.float(message.Xs[i]);\n                writer.ldelim();\n            }\n            if (message.Ys != null && message.Ys.length) {\n                writer.uint32(/* id 6, wireType 2 =*/50).fork();\n                for (var i = 0; i < message.Ys.length; ++i)\n                    writer.float(message.Ys[i]);\n                writer.ldelim();\n            }\n            if (message.Zs != null && message.Zs.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.Zs.length; ++i)\n                    writer.float(message.Zs[i]);\n                writer.ldelim();\n            }\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                writer.uint32(/* id 93, wireType 0 =*/744).sint64(message.ActorId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified M2C_PathfindingResult message, length delimited. Does not implicitly {@link NiceET.M2C_PathfindingResult.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {NiceET.IM2C_PathfindingResult} message M2C_PathfindingResult message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_PathfindingResult.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a M2C_PathfindingResult message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.M2C_PathfindingResult} M2C_PathfindingResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_PathfindingResult.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.M2C_PathfindingResult();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 93:\n                    message.ActorId = reader.sint64();\n                    break;\n                case 1:\n                    message.Id = reader.sint64();\n                    break;\n                case 2:\n                    message.X = reader.float();\n                    break;\n                case 3:\n                    message.Y = reader.float();\n                    break;\n                case 4:\n                    message.Z = reader.float();\n                    break;\n                case 5:\n                    if (!(message.Xs && message.Xs.length))\n                        message.Xs = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.Xs.push(reader.float());\n                    } else\n                        message.Xs.push(reader.float());\n                    break;\n                case 6:\n                    if (!(message.Ys && message.Ys.length))\n                        message.Ys = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.Ys.push(reader.float());\n                    } else\n                        message.Ys.push(reader.float());\n                    break;\n                case 7:\n                    if (!(message.Zs && message.Zs.length))\n                        message.Zs = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.Zs.push(reader.float());\n                    } else\n                        message.Zs.push(reader.float());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a M2C_PathfindingResult message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.M2C_PathfindingResult} M2C_PathfindingResult\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_PathfindingResult.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a M2C_PathfindingResult message.\n         * @function verify\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        M2C_PathfindingResult.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (!$util.isInteger(message.ActorId) && !(message.ActorId && $util.isInteger(message.ActorId.low) && $util.isInteger(message.ActorId.high)))\n                    return \"ActorId: integer|Long expected\";\n            if (message.Id != null && message.hasOwnProperty(\"Id\"))\n                if (!$util.isInteger(message.Id) && !(message.Id && $util.isInteger(message.Id.low) && $util.isInteger(message.Id.high)))\n                    return \"Id: integer|Long expected\";\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                if (typeof message.X !== \"number\")\n                    return \"X: number expected\";\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                if (typeof message.Y !== \"number\")\n                    return \"Y: number expected\";\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                if (typeof message.Z !== \"number\")\n                    return \"Z: number expected\";\n            if (message.Xs != null && message.hasOwnProperty(\"Xs\")) {\n                if (!Array.isArray(message.Xs))\n                    return \"Xs: array expected\";\n                for (var i = 0; i < message.Xs.length; ++i)\n                    if (typeof message.Xs[i] !== \"number\")\n                        return \"Xs: number[] expected\";\n            }\n            if (message.Ys != null && message.hasOwnProperty(\"Ys\")) {\n                if (!Array.isArray(message.Ys))\n                    return \"Ys: array expected\";\n                for (var i = 0; i < message.Ys.length; ++i)\n                    if (typeof message.Ys[i] !== \"number\")\n                        return \"Ys: number[] expected\";\n            }\n            if (message.Zs != null && message.hasOwnProperty(\"Zs\")) {\n                if (!Array.isArray(message.Zs))\n                    return \"Zs: array expected\";\n                for (var i = 0; i < message.Zs.length; ++i)\n                    if (typeof message.Zs[i] !== \"number\")\n                        return \"Zs: number[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a M2C_PathfindingResult message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.M2C_PathfindingResult} M2C_PathfindingResult\n         */\n        M2C_PathfindingResult.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.M2C_PathfindingResult)\n                return object;\n            var message = new $root.NiceET.M2C_PathfindingResult();\n            if (object.ActorId != null)\n                if ($util.Long)\n                    (message.ActorId = $util.Long.fromValue(object.ActorId)).unsigned = false;\n                else if (typeof object.ActorId === \"string\")\n                    message.ActorId = parseInt(object.ActorId, 10);\n                else if (typeof object.ActorId === \"number\")\n                    message.ActorId = object.ActorId;\n                else if (typeof object.ActorId === \"object\")\n                    message.ActorId = new $util.LongBits(object.ActorId.low >>> 0, object.ActorId.high >>> 0).toNumber();\n            if (object.Id != null)\n                if ($util.Long)\n                    (message.Id = $util.Long.fromValue(object.Id)).unsigned = false;\n                else if (typeof object.Id === \"string\")\n                    message.Id = parseInt(object.Id, 10);\n                else if (typeof object.Id === \"number\")\n                    message.Id = object.Id;\n                else if (typeof object.Id === \"object\")\n                    message.Id = new $util.LongBits(object.Id.low >>> 0, object.Id.high >>> 0).toNumber();\n            if (object.X != null)\n                message.X = Number(object.X);\n            if (object.Y != null)\n                message.Y = Number(object.Y);\n            if (object.Z != null)\n                message.Z = Number(object.Z);\n            if (object.Xs) {\n                if (!Array.isArray(object.Xs))\n                    throw TypeError(\".NiceET.M2C_PathfindingResult.Xs: array expected\");\n                message.Xs = [];\n                for (var i = 0; i < object.Xs.length; ++i)\n                    message.Xs[i] = Number(object.Xs[i]);\n            }\n            if (object.Ys) {\n                if (!Array.isArray(object.Ys))\n                    throw TypeError(\".NiceET.M2C_PathfindingResult.Ys: array expected\");\n                message.Ys = [];\n                for (var i = 0; i < object.Ys.length; ++i)\n                    message.Ys[i] = Number(object.Ys[i]);\n            }\n            if (object.Zs) {\n                if (!Array.isArray(object.Zs))\n                    throw TypeError(\".NiceET.M2C_PathfindingResult.Zs: array expected\");\n                message.Zs = [];\n                for (var i = 0; i < object.Zs.length; ++i)\n                    message.Zs[i] = Number(object.Zs[i]);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a M2C_PathfindingResult message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.M2C_PathfindingResult\n         * @static\n         * @param {NiceET.M2C_PathfindingResult} message M2C_PathfindingResult\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        M2C_PathfindingResult.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.Xs = [];\n                object.Ys = [];\n                object.Zs = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.Id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Id = options.longs === String ? \"0\" : 0;\n                object.X = 0;\n                object.Y = 0;\n                object.Z = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.ActorId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.ActorId = options.longs === String ? \"0\" : 0;\n            }\n            if (message.Id != null && message.hasOwnProperty(\"Id\"))\n                if (typeof message.Id === \"number\")\n                    object.Id = options.longs === String ? String(message.Id) : message.Id;\n                else\n                    object.Id = options.longs === String ? $util.Long.prototype.toString.call(message.Id) : options.longs === Number ? new $util.LongBits(message.Id.low >>> 0, message.Id.high >>> 0).toNumber() : message.Id;\n            if (message.X != null && message.hasOwnProperty(\"X\"))\n                object.X = options.json && !isFinite(message.X) ? String(message.X) : message.X;\n            if (message.Y != null && message.hasOwnProperty(\"Y\"))\n                object.Y = options.json && !isFinite(message.Y) ? String(message.Y) : message.Y;\n            if (message.Z != null && message.hasOwnProperty(\"Z\"))\n                object.Z = options.json && !isFinite(message.Z) ? String(message.Z) : message.Z;\n            if (message.Xs && message.Xs.length) {\n                object.Xs = [];\n                for (var j = 0; j < message.Xs.length; ++j)\n                    object.Xs[j] = options.json && !isFinite(message.Xs[j]) ? String(message.Xs[j]) : message.Xs[j];\n            }\n            if (message.Ys && message.Ys.length) {\n                object.Ys = [];\n                for (var j = 0; j < message.Ys.length; ++j)\n                    object.Ys[j] = options.json && !isFinite(message.Ys[j]) ? String(message.Ys[j]) : message.Ys[j];\n            }\n            if (message.Zs && message.Zs.length) {\n                object.Zs = [];\n                for (var j = 0; j < message.Zs.length; ++j)\n                    object.Zs[j] = options.json && !isFinite(message.Zs[j]) ? String(message.Zs[j]) : message.Zs[j];\n            }\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (typeof message.ActorId === \"number\")\n                    object.ActorId = options.longs === String ? String(message.ActorId) : message.ActorId;\n                else\n                    object.ActorId = options.longs === String ? $util.Long.prototype.toString.call(message.ActorId) : options.longs === Number ? new $util.LongBits(message.ActorId.low >>> 0, message.ActorId.high >>> 0).toNumber() : message.ActorId;\n            return object;\n        };\n\n        /**\n         * Converts this M2C_PathfindingResult to JSON.\n         * @function toJSON\n         * @memberof NiceET.M2C_PathfindingResult\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        M2C_PathfindingResult.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return M2C_PathfindingResult;\n    })();\n\n    NiceET.C2R_Ping = (function() {\n\n        /**\n         * Properties of a C2R_Ping.\n         * @memberof NiceET\n         * @interface IC2R_Ping\n         * @property {number|null} [RpcId] C2R_Ping RpcId\n         */\n\n        /**\n         * Constructs a new C2R_Ping.\n         * @memberof NiceET\n         * @classdesc Represents a C2R_Ping.\n         * @implements IC2R_Ping\n         * @constructor\n         * @param {NiceET.IC2R_Ping=} [properties] Properties to set\n         */\n        function C2R_Ping(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2R_Ping RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2R_Ping\n         * @instance\n         */\n        C2R_Ping.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2R_Ping instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {NiceET.IC2R_Ping=} [properties] Properties to set\n         * @returns {NiceET.C2R_Ping} C2R_Ping instance\n         */\n        C2R_Ping.create = function create(properties) {\n            return new C2R_Ping(properties);\n        };\n\n        /**\n         * Encodes the specified C2R_Ping message. Does not implicitly {@link NiceET.C2R_Ping.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {NiceET.IC2R_Ping} message C2R_Ping message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2R_Ping.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2R_Ping message, length delimited. Does not implicitly {@link NiceET.C2R_Ping.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {NiceET.IC2R_Ping} message C2R_Ping message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2R_Ping.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2R_Ping message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2R_Ping} C2R_Ping\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2R_Ping.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2R_Ping();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2R_Ping message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2R_Ping} C2R_Ping\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2R_Ping.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2R_Ping message.\n         * @function verify\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2R_Ping.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2R_Ping message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2R_Ping} C2R_Ping\n         */\n        C2R_Ping.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2R_Ping)\n                return object;\n            var message = new $root.NiceET.C2R_Ping();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2R_Ping message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2R_Ping\n         * @static\n         * @param {NiceET.C2R_Ping} message C2R_Ping\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2R_Ping.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.RpcId = 0;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this C2R_Ping to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2R_Ping\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2R_Ping.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2R_Ping;\n    })();\n\n    NiceET.R2C_Ping = (function() {\n\n        /**\n         * Properties of a R2C_Ping.\n         * @memberof NiceET\n         * @interface IR2C_Ping\n         * @property {number|null} [RpcId] R2C_Ping RpcId\n         * @property {number|null} [Error] R2C_Ping Error\n         * @property {string|null} [Message] R2C_Ping Message\n         */\n\n        /**\n         * Constructs a new R2C_Ping.\n         * @memberof NiceET\n         * @classdesc Represents a R2C_Ping.\n         * @implements IR2C_Ping\n         * @constructor\n         * @param {NiceET.IR2C_Ping=} [properties] Properties to set\n         */\n        function R2C_Ping(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * R2C_Ping RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.R2C_Ping\n         * @instance\n         */\n        R2C_Ping.prototype.RpcId = 0;\n\n        /**\n         * R2C_Ping Error.\n         * @member {number} Error\n         * @memberof NiceET.R2C_Ping\n         * @instance\n         */\n        R2C_Ping.prototype.Error = 0;\n\n        /**\n         * R2C_Ping Message.\n         * @member {string} Message\n         * @memberof NiceET.R2C_Ping\n         * @instance\n         */\n        R2C_Ping.prototype.Message = \"\";\n\n        /**\n         * Creates a new R2C_Ping instance using the specified properties.\n         * @function create\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {NiceET.IR2C_Ping=} [properties] Properties to set\n         * @returns {NiceET.R2C_Ping} R2C_Ping instance\n         */\n        R2C_Ping.create = function create(properties) {\n            return new R2C_Ping(properties);\n        };\n\n        /**\n         * Encodes the specified R2C_Ping message. Does not implicitly {@link NiceET.R2C_Ping.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {NiceET.IR2C_Ping} message R2C_Ping message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        R2C_Ping.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified R2C_Ping message, length delimited. Does not implicitly {@link NiceET.R2C_Ping.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {NiceET.IR2C_Ping} message R2C_Ping message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        R2C_Ping.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a R2C_Ping message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.R2C_Ping} R2C_Ping\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        R2C_Ping.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.R2C_Ping();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a R2C_Ping message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.R2C_Ping} R2C_Ping\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        R2C_Ping.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a R2C_Ping message.\n         * @function verify\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        R2C_Ping.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a R2C_Ping message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.R2C_Ping} R2C_Ping\n         */\n        R2C_Ping.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.R2C_Ping)\n                return object;\n            var message = new $root.NiceET.R2C_Ping();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a R2C_Ping message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.R2C_Ping\n         * @static\n         * @param {NiceET.R2C_Ping} message R2C_Ping\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        R2C_Ping.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this R2C_Ping to JSON.\n         * @function toJSON\n         * @memberof NiceET.R2C_Ping\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        R2C_Ping.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return R2C_Ping;\n    })();\n\n    NiceET.G2C_Test = (function() {\n\n        /**\n         * Properties of a G2C_Test.\n         * @memberof NiceET\n         * @interface IG2C_Test\n         */\n\n        /**\n         * Constructs a new G2C_Test.\n         * @memberof NiceET\n         * @classdesc Represents a G2C_Test.\n         * @implements IG2C_Test\n         * @constructor\n         * @param {NiceET.IG2C_Test=} [properties] Properties to set\n         */\n        function G2C_Test(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * Creates a new G2C_Test instance using the specified properties.\n         * @function create\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {NiceET.IG2C_Test=} [properties] Properties to set\n         * @returns {NiceET.G2C_Test} G2C_Test instance\n         */\n        G2C_Test.create = function create(properties) {\n            return new G2C_Test(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_Test message. Does not implicitly {@link NiceET.G2C_Test.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {NiceET.IG2C_Test} message G2C_Test message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_Test.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified G2C_Test message, length delimited. Does not implicitly {@link NiceET.G2C_Test.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {NiceET.IG2C_Test} message G2C_Test message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_Test.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a G2C_Test message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.G2C_Test} G2C_Test\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_Test.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.G2C_Test();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a G2C_Test message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.G2C_Test} G2C_Test\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_Test.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a G2C_Test message.\n         * @function verify\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        G2C_Test.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            return null;\n        };\n\n        /**\n         * Creates a G2C_Test message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.G2C_Test} G2C_Test\n         */\n        G2C_Test.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.G2C_Test)\n                return object;\n            return new $root.NiceET.G2C_Test();\n        };\n\n        /**\n         * Creates a plain object from a G2C_Test message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.G2C_Test\n         * @static\n         * @param {NiceET.G2C_Test} message G2C_Test\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        G2C_Test.toObject = function toObject() {\n            return {};\n        };\n\n        /**\n         * Converts this G2C_Test to JSON.\n         * @function toJSON\n         * @memberof NiceET.G2C_Test\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        G2C_Test.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return G2C_Test;\n    })();\n\n    NiceET.C2M_Reload = (function() {\n\n        /**\n         * Properties of a C2M_Reload.\n         * @memberof NiceET\n         * @interface IC2M_Reload\n         * @property {number|null} [RpcId] C2M_Reload RpcId\n         * @property {string|null} [Account] C2M_Reload Account\n         * @property {string|null} [Password] C2M_Reload Password\n         */\n\n        /**\n         * Constructs a new C2M_Reload.\n         * @memberof NiceET\n         * @classdesc Represents a C2M_Reload.\n         * @implements IC2M_Reload\n         * @constructor\n         * @param {NiceET.IC2M_Reload=} [properties] Properties to set\n         */\n        function C2M_Reload(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2M_Reload RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2M_Reload\n         * @instance\n         */\n        C2M_Reload.prototype.RpcId = 0;\n\n        /**\n         * C2M_Reload Account.\n         * @member {string} Account\n         * @memberof NiceET.C2M_Reload\n         * @instance\n         */\n        C2M_Reload.prototype.Account = \"\";\n\n        /**\n         * C2M_Reload Password.\n         * @member {string} Password\n         * @memberof NiceET.C2M_Reload\n         * @instance\n         */\n        C2M_Reload.prototype.Password = \"\";\n\n        /**\n         * Creates a new C2M_Reload instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {NiceET.IC2M_Reload=} [properties] Properties to set\n         * @returns {NiceET.C2M_Reload} C2M_Reload instance\n         */\n        C2M_Reload.create = function create(properties) {\n            return new C2M_Reload(properties);\n        };\n\n        /**\n         * Encodes the specified C2M_Reload message. Does not implicitly {@link NiceET.C2M_Reload.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {NiceET.IC2M_Reload} message C2M_Reload message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_Reload.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Account);\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.Password);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2M_Reload message, length delimited. Does not implicitly {@link NiceET.C2M_Reload.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {NiceET.IC2M_Reload} message C2M_Reload message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_Reload.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2M_Reload message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2M_Reload} C2M_Reload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_Reload.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2M_Reload();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 1:\n                    message.Account = reader.string();\n                    break;\n                case 2:\n                    message.Password = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2M_Reload message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2M_Reload} C2M_Reload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_Reload.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2M_Reload message.\n         * @function verify\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2M_Reload.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                if (!$util.isString(message.Account))\n                    return \"Account: string expected\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                if (!$util.isString(message.Password))\n                    return \"Password: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2M_Reload message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2M_Reload} C2M_Reload\n         */\n        C2M_Reload.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2M_Reload)\n                return object;\n            var message = new $root.NiceET.C2M_Reload();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Account != null)\n                message.Account = String(object.Account);\n            if (object.Password != null)\n                message.Password = String(object.Password);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2M_Reload message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2M_Reload\n         * @static\n         * @param {NiceET.C2M_Reload} message C2M_Reload\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2M_Reload.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.Account = \"\";\n                object.Password = \"\";\n                object.RpcId = 0;\n            }\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                object.Account = message.Account;\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                object.Password = message.Password;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this C2M_Reload to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2M_Reload\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2M_Reload.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2M_Reload;\n    })();\n\n    NiceET.M2C_Reload = (function() {\n\n        /**\n         * Properties of a M2C_Reload.\n         * @memberof NiceET\n         * @interface IM2C_Reload\n         * @property {number|null} [RpcId] M2C_Reload RpcId\n         * @property {number|null} [Error] M2C_Reload Error\n         * @property {string|null} [Message] M2C_Reload Message\n         */\n\n        /**\n         * Constructs a new M2C_Reload.\n         * @memberof NiceET\n         * @classdesc Represents a M2C_Reload.\n         * @implements IM2C_Reload\n         * @constructor\n         * @param {NiceET.IM2C_Reload=} [properties] Properties to set\n         */\n        function M2C_Reload(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * M2C_Reload RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.M2C_Reload\n         * @instance\n         */\n        M2C_Reload.prototype.RpcId = 0;\n\n        /**\n         * M2C_Reload Error.\n         * @member {number} Error\n         * @memberof NiceET.M2C_Reload\n         * @instance\n         */\n        M2C_Reload.prototype.Error = 0;\n\n        /**\n         * M2C_Reload Message.\n         * @member {string} Message\n         * @memberof NiceET.M2C_Reload\n         * @instance\n         */\n        M2C_Reload.prototype.Message = \"\";\n\n        /**\n         * Creates a new M2C_Reload instance using the specified properties.\n         * @function create\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {NiceET.IM2C_Reload=} [properties] Properties to set\n         * @returns {NiceET.M2C_Reload} M2C_Reload instance\n         */\n        M2C_Reload.create = function create(properties) {\n            return new M2C_Reload(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_Reload message. Does not implicitly {@link NiceET.M2C_Reload.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {NiceET.IM2C_Reload} message M2C_Reload message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_Reload.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified M2C_Reload message, length delimited. Does not implicitly {@link NiceET.M2C_Reload.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {NiceET.IM2C_Reload} message M2C_Reload message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_Reload.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a M2C_Reload message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.M2C_Reload} M2C_Reload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_Reload.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.M2C_Reload();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a M2C_Reload message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.M2C_Reload} M2C_Reload\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_Reload.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a M2C_Reload message.\n         * @function verify\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        M2C_Reload.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a M2C_Reload message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.M2C_Reload} M2C_Reload\n         */\n        M2C_Reload.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.M2C_Reload)\n                return object;\n            var message = new $root.NiceET.M2C_Reload();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a M2C_Reload message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.M2C_Reload\n         * @static\n         * @param {NiceET.M2C_Reload} message M2C_Reload\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        M2C_Reload.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this M2C_Reload to JSON.\n         * @function toJSON\n         * @memberof NiceET.M2C_Reload\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        M2C_Reload.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return M2C_Reload;\n    })();\n\n    NiceET.C2R_Login = (function() {\n\n        /**\n         * Properties of a C2R_Login.\n         * @memberof NiceET\n         * @interface IC2R_Login\n         * @property {number|null} [RpcId] C2R_Login RpcId\n         * @property {string|null} [Account] C2R_Login Account\n         * @property {string|null} [Password] C2R_Login Password\n         */\n\n        /**\n         * Constructs a new C2R_Login.\n         * @memberof NiceET\n         * @classdesc Represents a C2R_Login.\n         * @implements IC2R_Login\n         * @constructor\n         * @param {NiceET.IC2R_Login=} [properties] Properties to set\n         */\n        function C2R_Login(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2R_Login RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2R_Login\n         * @instance\n         */\n        C2R_Login.prototype.RpcId = 0;\n\n        /**\n         * C2R_Login Account.\n         * @member {string} Account\n         * @memberof NiceET.C2R_Login\n         * @instance\n         */\n        C2R_Login.prototype.Account = \"\";\n\n        /**\n         * C2R_Login Password.\n         * @member {string} Password\n         * @memberof NiceET.C2R_Login\n         * @instance\n         */\n        C2R_Login.prototype.Password = \"\";\n\n        /**\n         * Creates a new C2R_Login instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {NiceET.IC2R_Login=} [properties] Properties to set\n         * @returns {NiceET.C2R_Login} C2R_Login instance\n         */\n        C2R_Login.create = function create(properties) {\n            return new C2R_Login(properties);\n        };\n\n        /**\n         * Encodes the specified C2R_Login message. Does not implicitly {@link NiceET.C2R_Login.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {NiceET.IC2R_Login} message C2R_Login message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2R_Login.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Account);\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.Password);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2R_Login message, length delimited. Does not implicitly {@link NiceET.C2R_Login.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {NiceET.IC2R_Login} message C2R_Login message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2R_Login.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2R_Login message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2R_Login} C2R_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2R_Login.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2R_Login();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 1:\n                    message.Account = reader.string();\n                    break;\n                case 2:\n                    message.Password = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2R_Login message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2R_Login} C2R_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2R_Login.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2R_Login message.\n         * @function verify\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2R_Login.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                if (!$util.isString(message.Account))\n                    return \"Account: string expected\";\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                if (!$util.isString(message.Password))\n                    return \"Password: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2R_Login message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2R_Login} C2R_Login\n         */\n        C2R_Login.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2R_Login)\n                return object;\n            var message = new $root.NiceET.C2R_Login();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Account != null)\n                message.Account = String(object.Account);\n            if (object.Password != null)\n                message.Password = String(object.Password);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2R_Login message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2R_Login\n         * @static\n         * @param {NiceET.C2R_Login} message C2R_Login\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2R_Login.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.Account = \"\";\n                object.Password = \"\";\n                object.RpcId = 0;\n            }\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\n                object.Account = message.Account;\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\n                object.Password = message.Password;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this C2R_Login to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2R_Login\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2R_Login.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2R_Login;\n    })();\n\n    NiceET.R2C_Login = (function() {\n\n        /**\n         * Properties of a R2C_Login.\n         * @memberof NiceET\n         * @interface IR2C_Login\n         * @property {number|null} [RpcId] R2C_Login RpcId\n         * @property {number|null} [Error] R2C_Login Error\n         * @property {string|null} [Message] R2C_Login Message\n         * @property {string|null} [Address] R2C_Login Address\n         * @property {number|Long|null} [Key] R2C_Login Key\n         * @property {number|Long|null} [GateId] R2C_Login GateId\n         */\n\n        /**\n         * Constructs a new R2C_Login.\n         * @memberof NiceET\n         * @classdesc Represents a R2C_Login.\n         * @implements IR2C_Login\n         * @constructor\n         * @param {NiceET.IR2C_Login=} [properties] Properties to set\n         */\n        function R2C_Login(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * R2C_Login RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.RpcId = 0;\n\n        /**\n         * R2C_Login Error.\n         * @member {number} Error\n         * @memberof NiceET.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Error = 0;\n\n        /**\n         * R2C_Login Message.\n         * @member {string} Message\n         * @memberof NiceET.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Message = \"\";\n\n        /**\n         * R2C_Login Address.\n         * @member {string} Address\n         * @memberof NiceET.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Address = \"\";\n\n        /**\n         * R2C_Login Key.\n         * @member {number|Long} Key\n         * @memberof NiceET.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.Key = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * R2C_Login GateId.\n         * @member {number|Long} GateId\n         * @memberof NiceET.R2C_Login\n         * @instance\n         */\n        R2C_Login.prototype.GateId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new R2C_Login instance using the specified properties.\n         * @function create\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {NiceET.IR2C_Login=} [properties] Properties to set\n         * @returns {NiceET.R2C_Login} R2C_Login instance\n         */\n        R2C_Login.create = function create(properties) {\n            return new R2C_Login(properties);\n        };\n\n        /**\n         * Encodes the specified R2C_Login message. Does not implicitly {@link NiceET.R2C_Login.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {NiceET.IR2C_Login} message R2C_Login message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        R2C_Login.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Address != null && message.hasOwnProperty(\"Address\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Address);\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).sint64(message.Key);\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).sint64(message.GateId);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified R2C_Login message, length delimited. Does not implicitly {@link NiceET.R2C_Login.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {NiceET.IR2C_Login} message R2C_Login message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        R2C_Login.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a R2C_Login message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.R2C_Login} R2C_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        R2C_Login.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.R2C_Login();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                case 1:\n                    message.Address = reader.string();\n                    break;\n                case 2:\n                    message.Key = reader.sint64();\n                    break;\n                case 3:\n                    message.GateId = reader.sint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a R2C_Login message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.R2C_Login} R2C_Login\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        R2C_Login.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a R2C_Login message.\n         * @function verify\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        R2C_Login.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.Address != null && message.hasOwnProperty(\"Address\"))\n                if (!$util.isString(message.Address))\n                    return \"Address: string expected\";\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\n                if (!$util.isInteger(message.Key) && !(message.Key && $util.isInteger(message.Key.low) && $util.isInteger(message.Key.high)))\n                    return \"Key: integer|Long expected\";\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\n                if (!$util.isInteger(message.GateId) && !(message.GateId && $util.isInteger(message.GateId.low) && $util.isInteger(message.GateId.high)))\n                    return \"GateId: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a R2C_Login message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.R2C_Login} R2C_Login\n         */\n        R2C_Login.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.R2C_Login)\n                return object;\n            var message = new $root.NiceET.R2C_Login();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            if (object.Address != null)\n                message.Address = String(object.Address);\n            if (object.Key != null)\n                if ($util.Long)\n                    (message.Key = $util.Long.fromValue(object.Key)).unsigned = false;\n                else if (typeof object.Key === \"string\")\n                    message.Key = parseInt(object.Key, 10);\n                else if (typeof object.Key === \"number\")\n                    message.Key = object.Key;\n                else if (typeof object.Key === \"object\")\n                    message.Key = new $util.LongBits(object.Key.low >>> 0, object.Key.high >>> 0).toNumber();\n            if (object.GateId != null)\n                if ($util.Long)\n                    (message.GateId = $util.Long.fromValue(object.GateId)).unsigned = false;\n                else if (typeof object.GateId === \"string\")\n                    message.GateId = parseInt(object.GateId, 10);\n                else if (typeof object.GateId === \"number\")\n                    message.GateId = object.GateId;\n                else if (typeof object.GateId === \"object\")\n                    message.GateId = new $util.LongBits(object.GateId.low >>> 0, object.GateId.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a R2C_Login message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.R2C_Login\n         * @static\n         * @param {NiceET.R2C_Login} message R2C_Login\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        R2C_Login.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.Address = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.Key = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Key = options.longs === String ? \"0\" : 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.GateId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.GateId = options.longs === String ? \"0\" : 0;\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.Address != null && message.hasOwnProperty(\"Address\"))\n                object.Address = message.Address;\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\n                if (typeof message.Key === \"number\")\n                    object.Key = options.longs === String ? String(message.Key) : message.Key;\n                else\n                    object.Key = options.longs === String ? $util.Long.prototype.toString.call(message.Key) : options.longs === Number ? new $util.LongBits(message.Key.low >>> 0, message.Key.high >>> 0).toNumber() : message.Key;\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\n                if (typeof message.GateId === \"number\")\n                    object.GateId = options.longs === String ? String(message.GateId) : message.GateId;\n                else\n                    object.GateId = options.longs === String ? $util.Long.prototype.toString.call(message.GateId) : options.longs === Number ? new $util.LongBits(message.GateId.low >>> 0, message.GateId.high >>> 0).toNumber() : message.GateId;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this R2C_Login to JSON.\n         * @function toJSON\n         * @memberof NiceET.R2C_Login\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        R2C_Login.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return R2C_Login;\n    })();\n\n    NiceET.C2G_LoginGate = (function() {\n\n        /**\n         * Properties of a C2G_LoginGate.\n         * @memberof NiceET\n         * @interface IC2G_LoginGate\n         * @property {number|null} [RpcId] C2G_LoginGate RpcId\n         * @property {number|Long|null} [Key] C2G_LoginGate Key\n         * @property {number|Long|null} [GateId] C2G_LoginGate GateId\n         */\n\n        /**\n         * Constructs a new C2G_LoginGate.\n         * @memberof NiceET\n         * @classdesc Represents a C2G_LoginGate.\n         * @implements IC2G_LoginGate\n         * @constructor\n         * @param {NiceET.IC2G_LoginGate=} [properties] Properties to set\n         */\n        function C2G_LoginGate(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2G_LoginGate RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2G_LoginGate\n         * @instance\n         */\n        C2G_LoginGate.prototype.RpcId = 0;\n\n        /**\n         * C2G_LoginGate Key.\n         * @member {number|Long} Key\n         * @memberof NiceET.C2G_LoginGate\n         * @instance\n         */\n        C2G_LoginGate.prototype.Key = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * C2G_LoginGate GateId.\n         * @member {number|Long} GateId\n         * @memberof NiceET.C2G_LoginGate\n         * @instance\n         */\n        C2G_LoginGate.prototype.GateId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new C2G_LoginGate instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {NiceET.IC2G_LoginGate=} [properties] Properties to set\n         * @returns {NiceET.C2G_LoginGate} C2G_LoginGate instance\n         */\n        C2G_LoginGate.create = function create(properties) {\n            return new C2G_LoginGate(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_LoginGate message. Does not implicitly {@link NiceET.C2G_LoginGate.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {NiceET.IC2G_LoginGate} message C2G_LoginGate message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_LoginGate.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).sint64(message.Key);\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).sint64(message.GateId);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2G_LoginGate message, length delimited. Does not implicitly {@link NiceET.C2G_LoginGate.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {NiceET.IC2G_LoginGate} message C2G_LoginGate message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_LoginGate.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2G_LoginGate message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2G_LoginGate} C2G_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_LoginGate.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2G_LoginGate();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 1:\n                    message.Key = reader.sint64();\n                    break;\n                case 2:\n                    message.GateId = reader.sint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2G_LoginGate message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2G_LoginGate} C2G_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_LoginGate.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2G_LoginGate message.\n         * @function verify\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2G_LoginGate.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\n                if (!$util.isInteger(message.Key) && !(message.Key && $util.isInteger(message.Key.low) && $util.isInteger(message.Key.high)))\n                    return \"Key: integer|Long expected\";\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\n                if (!$util.isInteger(message.GateId) && !(message.GateId && $util.isInteger(message.GateId.low) && $util.isInteger(message.GateId.high)))\n                    return \"GateId: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2G_LoginGate message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2G_LoginGate} C2G_LoginGate\n         */\n        C2G_LoginGate.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2G_LoginGate)\n                return object;\n            var message = new $root.NiceET.C2G_LoginGate();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Key != null)\n                if ($util.Long)\n                    (message.Key = $util.Long.fromValue(object.Key)).unsigned = false;\n                else if (typeof object.Key === \"string\")\n                    message.Key = parseInt(object.Key, 10);\n                else if (typeof object.Key === \"number\")\n                    message.Key = object.Key;\n                else if (typeof object.Key === \"object\")\n                    message.Key = new $util.LongBits(object.Key.low >>> 0, object.Key.high >>> 0).toNumber();\n            if (object.GateId != null)\n                if ($util.Long)\n                    (message.GateId = $util.Long.fromValue(object.GateId)).unsigned = false;\n                else if (typeof object.GateId === \"string\")\n                    message.GateId = parseInt(object.GateId, 10);\n                else if (typeof object.GateId === \"number\")\n                    message.GateId = object.GateId;\n                else if (typeof object.GateId === \"object\")\n                    message.GateId = new $util.LongBits(object.GateId.low >>> 0, object.GateId.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2G_LoginGate message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2G_LoginGate\n         * @static\n         * @param {NiceET.C2G_LoginGate} message C2G_LoginGate\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2G_LoginGate.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.Key = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.Key = options.longs === String ? \"0\" : 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.GateId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.GateId = options.longs === String ? \"0\" : 0;\n                object.RpcId = 0;\n            }\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\n                if (typeof message.Key === \"number\")\n                    object.Key = options.longs === String ? String(message.Key) : message.Key;\n                else\n                    object.Key = options.longs === String ? $util.Long.prototype.toString.call(message.Key) : options.longs === Number ? new $util.LongBits(message.Key.low >>> 0, message.Key.high >>> 0).toNumber() : message.Key;\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\n                if (typeof message.GateId === \"number\")\n                    object.GateId = options.longs === String ? String(message.GateId) : message.GateId;\n                else\n                    object.GateId = options.longs === String ? $util.Long.prototype.toString.call(message.GateId) : options.longs === Number ? new $util.LongBits(message.GateId.low >>> 0, message.GateId.high >>> 0).toNumber() : message.GateId;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this C2G_LoginGate to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2G_LoginGate\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2G_LoginGate.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2G_LoginGate;\n    })();\n\n    NiceET.G2C_LoginGate = (function() {\n\n        /**\n         * Properties of a G2C_LoginGate.\n         * @memberof NiceET\n         * @interface IG2C_LoginGate\n         * @property {number|null} [RpcId] G2C_LoginGate RpcId\n         * @property {number|null} [Error] G2C_LoginGate Error\n         * @property {string|null} [Message] G2C_LoginGate Message\n         * @property {number|Long|null} [PlayerId] G2C_LoginGate PlayerId\n         */\n\n        /**\n         * Constructs a new G2C_LoginGate.\n         * @memberof NiceET\n         * @classdesc Represents a G2C_LoginGate.\n         * @implements IG2C_LoginGate\n         * @constructor\n         * @param {NiceET.IG2C_LoginGate=} [properties] Properties to set\n         */\n        function G2C_LoginGate(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * G2C_LoginGate RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.RpcId = 0;\n\n        /**\n         * G2C_LoginGate Error.\n         * @member {number} Error\n         * @memberof NiceET.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.Error = 0;\n\n        /**\n         * G2C_LoginGate Message.\n         * @member {string} Message\n         * @memberof NiceET.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.Message = \"\";\n\n        /**\n         * G2C_LoginGate PlayerId.\n         * @member {number|Long} PlayerId\n         * @memberof NiceET.G2C_LoginGate\n         * @instance\n         */\n        G2C_LoginGate.prototype.PlayerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new G2C_LoginGate instance using the specified properties.\n         * @function create\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {NiceET.IG2C_LoginGate=} [properties] Properties to set\n         * @returns {NiceET.G2C_LoginGate} G2C_LoginGate instance\n         */\n        G2C_LoginGate.create = function create(properties) {\n            return new G2C_LoginGate(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_LoginGate message. Does not implicitly {@link NiceET.G2C_LoginGate.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {NiceET.IG2C_LoginGate} message G2C_LoginGate message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_LoginGate.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.PlayerId != null && message.hasOwnProperty(\"PlayerId\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).sint64(message.PlayerId);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified G2C_LoginGate message, length delimited. Does not implicitly {@link NiceET.G2C_LoginGate.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {NiceET.IG2C_LoginGate} message G2C_LoginGate message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_LoginGate.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a G2C_LoginGate message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.G2C_LoginGate} G2C_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_LoginGate.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.G2C_LoginGate();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                case 1:\n                    message.PlayerId = reader.sint64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a G2C_LoginGate message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.G2C_LoginGate} G2C_LoginGate\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_LoginGate.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a G2C_LoginGate message.\n         * @function verify\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        G2C_LoginGate.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.PlayerId != null && message.hasOwnProperty(\"PlayerId\"))\n                if (!$util.isInteger(message.PlayerId) && !(message.PlayerId && $util.isInteger(message.PlayerId.low) && $util.isInteger(message.PlayerId.high)))\n                    return \"PlayerId: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates a G2C_LoginGate message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.G2C_LoginGate} G2C_LoginGate\n         */\n        G2C_LoginGate.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.G2C_LoginGate)\n                return object;\n            var message = new $root.NiceET.G2C_LoginGate();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            if (object.PlayerId != null)\n                if ($util.Long)\n                    (message.PlayerId = $util.Long.fromValue(object.PlayerId)).unsigned = false;\n                else if (typeof object.PlayerId === \"string\")\n                    message.PlayerId = parseInt(object.PlayerId, 10);\n                else if (typeof object.PlayerId === \"number\")\n                    message.PlayerId = object.PlayerId;\n                else if (typeof object.PlayerId === \"object\")\n                    message.PlayerId = new $util.LongBits(object.PlayerId.low >>> 0, object.PlayerId.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a G2C_LoginGate message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.G2C_LoginGate\n         * @static\n         * @param {NiceET.G2C_LoginGate} message G2C_LoginGate\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        G2C_LoginGate.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.PlayerId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.PlayerId = options.longs === String ? \"0\" : 0;\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.PlayerId != null && message.hasOwnProperty(\"PlayerId\"))\n                if (typeof message.PlayerId === \"number\")\n                    object.PlayerId = options.longs === String ? String(message.PlayerId) : message.PlayerId;\n                else\n                    object.PlayerId = options.longs === String ? $util.Long.prototype.toString.call(message.PlayerId) : options.longs === Number ? new $util.LongBits(message.PlayerId.low >>> 0, message.PlayerId.high >>> 0).toNumber() : message.PlayerId;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this G2C_LoginGate to JSON.\n         * @function toJSON\n         * @memberof NiceET.G2C_LoginGate\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        G2C_LoginGate.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return G2C_LoginGate;\n    })();\n\n    NiceET.G2C_TestHotfixMessage = (function() {\n\n        /**\n         * Properties of a G2C_TestHotfixMessage.\n         * @memberof NiceET\n         * @interface IG2C_TestHotfixMessage\n         * @property {string|null} [Info] G2C_TestHotfixMessage Info\n         */\n\n        /**\n         * Constructs a new G2C_TestHotfixMessage.\n         * @memberof NiceET\n         * @classdesc Represents a G2C_TestHotfixMessage.\n         * @implements IG2C_TestHotfixMessage\n         * @constructor\n         * @param {NiceET.IG2C_TestHotfixMessage=} [properties] Properties to set\n         */\n        function G2C_TestHotfixMessage(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * G2C_TestHotfixMessage Info.\n         * @member {string} Info\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @instance\n         */\n        G2C_TestHotfixMessage.prototype.Info = \"\";\n\n        /**\n         * Creates a new G2C_TestHotfixMessage instance using the specified properties.\n         * @function create\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {NiceET.IG2C_TestHotfixMessage=} [properties] Properties to set\n         * @returns {NiceET.G2C_TestHotfixMessage} G2C_TestHotfixMessage instance\n         */\n        G2C_TestHotfixMessage.create = function create(properties) {\n            return new G2C_TestHotfixMessage(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_TestHotfixMessage message. Does not implicitly {@link NiceET.G2C_TestHotfixMessage.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {NiceET.IG2C_TestHotfixMessage} message G2C_TestHotfixMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_TestHotfixMessage.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Info);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified G2C_TestHotfixMessage message, length delimited. Does not implicitly {@link NiceET.G2C_TestHotfixMessage.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {NiceET.IG2C_TestHotfixMessage} message G2C_TestHotfixMessage message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_TestHotfixMessage.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a G2C_TestHotfixMessage message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.G2C_TestHotfixMessage} G2C_TestHotfixMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_TestHotfixMessage.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.G2C_TestHotfixMessage();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.Info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a G2C_TestHotfixMessage message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.G2C_TestHotfixMessage} G2C_TestHotfixMessage\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_TestHotfixMessage.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a G2C_TestHotfixMessage message.\n         * @function verify\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        G2C_TestHotfixMessage.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                if (!$util.isString(message.Info))\n                    return \"Info: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a G2C_TestHotfixMessage message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.G2C_TestHotfixMessage} G2C_TestHotfixMessage\n         */\n        G2C_TestHotfixMessage.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.G2C_TestHotfixMessage)\n                return object;\n            var message = new $root.NiceET.G2C_TestHotfixMessage();\n            if (object.Info != null)\n                message.Info = String(object.Info);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a G2C_TestHotfixMessage message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @static\n         * @param {NiceET.G2C_TestHotfixMessage} message G2C_TestHotfixMessage\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        G2C_TestHotfixMessage.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.Info = \"\";\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                object.Info = message.Info;\n            return object;\n        };\n\n        /**\n         * Converts this G2C_TestHotfixMessage to JSON.\n         * @function toJSON\n         * @memberof NiceET.G2C_TestHotfixMessage\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        G2C_TestHotfixMessage.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return G2C_TestHotfixMessage;\n    })();\n\n    NiceET.C2M_TestActorRequest = (function() {\n\n        /**\n         * Properties of a C2M_TestActorRequest.\n         * @memberof NiceET\n         * @interface IC2M_TestActorRequest\n         * @property {number|null} [RpcId] C2M_TestActorRequest RpcId\n         * @property {number|Long|null} [ActorId] C2M_TestActorRequest ActorId\n         * @property {string|null} [Info] C2M_TestActorRequest Info\n         */\n\n        /**\n         * Constructs a new C2M_TestActorRequest.\n         * @memberof NiceET\n         * @classdesc Represents a C2M_TestActorRequest.\n         * @implements IC2M_TestActorRequest\n         * @constructor\n         * @param {NiceET.IC2M_TestActorRequest=} [properties] Properties to set\n         */\n        function C2M_TestActorRequest(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2M_TestActorRequest RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2M_TestActorRequest\n         * @instance\n         */\n        C2M_TestActorRequest.prototype.RpcId = 0;\n\n        /**\n         * C2M_TestActorRequest ActorId.\n         * @member {number|Long} ActorId\n         * @memberof NiceET.C2M_TestActorRequest\n         * @instance\n         */\n        C2M_TestActorRequest.prototype.ActorId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * C2M_TestActorRequest Info.\n         * @member {string} Info\n         * @memberof NiceET.C2M_TestActorRequest\n         * @instance\n         */\n        C2M_TestActorRequest.prototype.Info = \"\";\n\n        /**\n         * Creates a new C2M_TestActorRequest instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {NiceET.IC2M_TestActorRequest=} [properties] Properties to set\n         * @returns {NiceET.C2M_TestActorRequest} C2M_TestActorRequest instance\n         */\n        C2M_TestActorRequest.create = function create(properties) {\n            return new C2M_TestActorRequest(properties);\n        };\n\n        /**\n         * Encodes the specified C2M_TestActorRequest message. Does not implicitly {@link NiceET.C2M_TestActorRequest.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {NiceET.IC2M_TestActorRequest} message C2M_TestActorRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_TestActorRequest.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Info);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).sint64(message.ActorId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2M_TestActorRequest message, length delimited. Does not implicitly {@link NiceET.C2M_TestActorRequest.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {NiceET.IC2M_TestActorRequest} message C2M_TestActorRequest message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2M_TestActorRequest.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2M_TestActorRequest message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2M_TestActorRequest} C2M_TestActorRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_TestActorRequest.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2M_TestActorRequest();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.ActorId = reader.sint64();\n                    break;\n                case 1:\n                    message.Info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2M_TestActorRequest message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2M_TestActorRequest} C2M_TestActorRequest\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2M_TestActorRequest.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2M_TestActorRequest message.\n         * @function verify\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2M_TestActorRequest.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (!$util.isInteger(message.ActorId) && !(message.ActorId && $util.isInteger(message.ActorId.low) && $util.isInteger(message.ActorId.high)))\n                    return \"ActorId: integer|Long expected\";\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                if (!$util.isString(message.Info))\n                    return \"Info: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2M_TestActorRequest message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2M_TestActorRequest} C2M_TestActorRequest\n         */\n        C2M_TestActorRequest.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2M_TestActorRequest)\n                return object;\n            var message = new $root.NiceET.C2M_TestActorRequest();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.ActorId != null)\n                if ($util.Long)\n                    (message.ActorId = $util.Long.fromValue(object.ActorId)).unsigned = false;\n                else if (typeof object.ActorId === \"string\")\n                    message.ActorId = parseInt(object.ActorId, 10);\n                else if (typeof object.ActorId === \"number\")\n                    message.ActorId = object.ActorId;\n                else if (typeof object.ActorId === \"object\")\n                    message.ActorId = new $util.LongBits(object.ActorId.low >>> 0, object.ActorId.high >>> 0).toNumber();\n            if (object.Info != null)\n                message.Info = String(object.Info);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2M_TestActorRequest message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2M_TestActorRequest\n         * @static\n         * @param {NiceET.C2M_TestActorRequest} message C2M_TestActorRequest\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2M_TestActorRequest.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.Info = \"\";\n                object.RpcId = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.ActorId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.ActorId = options.longs === String ? \"0\" : 0;\n            }\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                object.Info = message.Info;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.ActorId != null && message.hasOwnProperty(\"ActorId\"))\n                if (typeof message.ActorId === \"number\")\n                    object.ActorId = options.longs === String ? String(message.ActorId) : message.ActorId;\n                else\n                    object.ActorId = options.longs === String ? $util.Long.prototype.toString.call(message.ActorId) : options.longs === Number ? new $util.LongBits(message.ActorId.low >>> 0, message.ActorId.high >>> 0).toNumber() : message.ActorId;\n            return object;\n        };\n\n        /**\n         * Converts this C2M_TestActorRequest to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2M_TestActorRequest\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2M_TestActorRequest.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2M_TestActorRequest;\n    })();\n\n    NiceET.M2C_TestActorResponse = (function() {\n\n        /**\n         * Properties of a M2C_TestActorResponse.\n         * @memberof NiceET\n         * @interface IM2C_TestActorResponse\n         * @property {number|null} [RpcId] M2C_TestActorResponse RpcId\n         * @property {number|null} [Error] M2C_TestActorResponse Error\n         * @property {string|null} [Message] M2C_TestActorResponse Message\n         * @property {string|null} [Info] M2C_TestActorResponse Info\n         */\n\n        /**\n         * Constructs a new M2C_TestActorResponse.\n         * @memberof NiceET\n         * @classdesc Represents a M2C_TestActorResponse.\n         * @implements IM2C_TestActorResponse\n         * @constructor\n         * @param {NiceET.IM2C_TestActorResponse=} [properties] Properties to set\n         */\n        function M2C_TestActorResponse(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * M2C_TestActorResponse RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.RpcId = 0;\n\n        /**\n         * M2C_TestActorResponse Error.\n         * @member {number} Error\n         * @memberof NiceET.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.Error = 0;\n\n        /**\n         * M2C_TestActorResponse Message.\n         * @member {string} Message\n         * @memberof NiceET.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.Message = \"\";\n\n        /**\n         * M2C_TestActorResponse Info.\n         * @member {string} Info\n         * @memberof NiceET.M2C_TestActorResponse\n         * @instance\n         */\n        M2C_TestActorResponse.prototype.Info = \"\";\n\n        /**\n         * Creates a new M2C_TestActorResponse instance using the specified properties.\n         * @function create\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {NiceET.IM2C_TestActorResponse=} [properties] Properties to set\n         * @returns {NiceET.M2C_TestActorResponse} M2C_TestActorResponse instance\n         */\n        M2C_TestActorResponse.create = function create(properties) {\n            return new M2C_TestActorResponse(properties);\n        };\n\n        /**\n         * Encodes the specified M2C_TestActorResponse message. Does not implicitly {@link NiceET.M2C_TestActorResponse.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {NiceET.IM2C_TestActorResponse} message M2C_TestActorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_TestActorResponse.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Info);\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified M2C_TestActorResponse message, length delimited. Does not implicitly {@link NiceET.M2C_TestActorResponse.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {NiceET.IM2C_TestActorResponse} message M2C_TestActorResponse message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        M2C_TestActorResponse.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a M2C_TestActorResponse message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.M2C_TestActorResponse} M2C_TestActorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_TestActorResponse.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.M2C_TestActorResponse();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                case 1:\n                    message.Info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a M2C_TestActorResponse message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.M2C_TestActorResponse} M2C_TestActorResponse\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        M2C_TestActorResponse.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a M2C_TestActorResponse message.\n         * @function verify\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        M2C_TestActorResponse.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                if (!$util.isString(message.Info))\n                    return \"Info: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a M2C_TestActorResponse message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.M2C_TestActorResponse} M2C_TestActorResponse\n         */\n        M2C_TestActorResponse.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.M2C_TestActorResponse)\n                return object;\n            var message = new $root.NiceET.M2C_TestActorResponse();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            if (object.Info != null)\n                message.Info = String(object.Info);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a M2C_TestActorResponse message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.M2C_TestActorResponse\n         * @static\n         * @param {NiceET.M2C_TestActorResponse} message M2C_TestActorResponse\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        M2C_TestActorResponse.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.Info = \"\";\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.Info != null && message.hasOwnProperty(\"Info\"))\n                object.Info = message.Info;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this M2C_TestActorResponse to JSON.\n         * @function toJSON\n         * @memberof NiceET.M2C_TestActorResponse\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        M2C_TestActorResponse.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return M2C_TestActorResponse;\n    })();\n\n    NiceET.PlayerInfo = (function() {\n\n        /**\n         * Properties of a PlayerInfo.\n         * @memberof NiceET\n         * @interface IPlayerInfo\n         * @property {number|null} [RpcId] PlayerInfo RpcId\n         */\n\n        /**\n         * Constructs a new PlayerInfo.\n         * @memberof NiceET\n         * @classdesc Represents a PlayerInfo.\n         * @implements IPlayerInfo\n         * @constructor\n         * @param {NiceET.IPlayerInfo=} [properties] Properties to set\n         */\n        function PlayerInfo(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * PlayerInfo RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.PlayerInfo\n         * @instance\n         */\n        PlayerInfo.prototype.RpcId = 0;\n\n        /**\n         * Creates a new PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {NiceET.IPlayerInfo=} [properties] Properties to set\n         * @returns {NiceET.PlayerInfo} PlayerInfo instance\n         */\n        PlayerInfo.create = function create(properties) {\n            return new PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified PlayerInfo message. Does not implicitly {@link NiceET.PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {NiceET.IPlayerInfo} message PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified PlayerInfo message, length delimited. Does not implicitly {@link NiceET.PlayerInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {NiceET.IPlayerInfo} message PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        PlayerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.PlayerInfo} PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.PlayerInfo();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a PlayerInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.PlayerInfo} PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        PlayerInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a PlayerInfo message.\n         * @function verify\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        PlayerInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a PlayerInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.PlayerInfo} PlayerInfo\n         */\n        PlayerInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.PlayerInfo)\n                return object;\n            var message = new $root.NiceET.PlayerInfo();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a PlayerInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.PlayerInfo\n         * @static\n         * @param {NiceET.PlayerInfo} message PlayerInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        PlayerInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.RpcId = 0;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this PlayerInfo to JSON.\n         * @function toJSON\n         * @memberof NiceET.PlayerInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        PlayerInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return PlayerInfo;\n    })();\n\n    NiceET.C2G_PlayerInfo = (function() {\n\n        /**\n         * Properties of a C2G_PlayerInfo.\n         * @memberof NiceET\n         * @interface IC2G_PlayerInfo\n         * @property {number|null} [RpcId] C2G_PlayerInfo RpcId\n         */\n\n        /**\n         * Constructs a new C2G_PlayerInfo.\n         * @memberof NiceET\n         * @classdesc Represents a C2G_PlayerInfo.\n         * @implements IC2G_PlayerInfo\n         * @constructor\n         * @param {NiceET.IC2G_PlayerInfo=} [properties] Properties to set\n         */\n        function C2G_PlayerInfo(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * C2G_PlayerInfo RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.C2G_PlayerInfo\n         * @instance\n         */\n        C2G_PlayerInfo.prototype.RpcId = 0;\n\n        /**\n         * Creates a new C2G_PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {NiceET.IC2G_PlayerInfo=} [properties] Properties to set\n         * @returns {NiceET.C2G_PlayerInfo} C2G_PlayerInfo instance\n         */\n        C2G_PlayerInfo.create = function create(properties) {\n            return new C2G_PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified C2G_PlayerInfo message. Does not implicitly {@link NiceET.C2G_PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {NiceET.IC2G_PlayerInfo} message C2G_PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_PlayerInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified C2G_PlayerInfo message, length delimited. Does not implicitly {@link NiceET.C2G_PlayerInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {NiceET.IC2G_PlayerInfo} message C2G_PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        C2G_PlayerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a C2G_PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.C2G_PlayerInfo} C2G_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_PlayerInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.C2G_PlayerInfo();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a C2G_PlayerInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.C2G_PlayerInfo} C2G_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        C2G_PlayerInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a C2G_PlayerInfo message.\n         * @function verify\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        C2G_PlayerInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            return null;\n        };\n\n        /**\n         * Creates a C2G_PlayerInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.C2G_PlayerInfo} C2G_PlayerInfo\n         */\n        C2G_PlayerInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.C2G_PlayerInfo)\n                return object;\n            var message = new $root.NiceET.C2G_PlayerInfo();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a C2G_PlayerInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.C2G_PlayerInfo\n         * @static\n         * @param {NiceET.C2G_PlayerInfo} message C2G_PlayerInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        C2G_PlayerInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.RpcId = 0;\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            return object;\n        };\n\n        /**\n         * Converts this C2G_PlayerInfo to JSON.\n         * @function toJSON\n         * @memberof NiceET.C2G_PlayerInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        C2G_PlayerInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return C2G_PlayerInfo;\n    })();\n\n    NiceET.G2C_PlayerInfo = (function() {\n\n        /**\n         * Properties of a G2C_PlayerInfo.\n         * @memberof NiceET\n         * @interface IG2C_PlayerInfo\n         * @property {number|null} [RpcId] G2C_PlayerInfo RpcId\n         * @property {number|null} [Error] G2C_PlayerInfo Error\n         * @property {string|null} [Message] G2C_PlayerInfo Message\n         * @property {NiceET.IPlayerInfo|null} [PlayerInfo] G2C_PlayerInfo PlayerInfo\n         * @property {Array.<NiceET.IPlayerInfo>|null} [PlayerInfos] G2C_PlayerInfo PlayerInfos\n         * @property {Array.<string>|null} [TestRepeatedString] G2C_PlayerInfo TestRepeatedString\n         * @property {Array.<number>|null} [TestRepeatedInt32] G2C_PlayerInfo TestRepeatedInt32\n         * @property {Array.<number|Long>|null} [TestRepeatedInt64] G2C_PlayerInfo TestRepeatedInt64\n         */\n\n        /**\n         * Constructs a new G2C_PlayerInfo.\n         * @memberof NiceET\n         * @classdesc Represents a G2C_PlayerInfo.\n         * @implements IG2C_PlayerInfo\n         * @constructor\n         * @param {NiceET.IG2C_PlayerInfo=} [properties] Properties to set\n         */\n        function G2C_PlayerInfo(properties) {\n            this.PlayerInfos = [];\n            this.TestRepeatedString = [];\n            this.TestRepeatedInt32 = [];\n            this.TestRepeatedInt64 = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * G2C_PlayerInfo RpcId.\n         * @member {number} RpcId\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.RpcId = 0;\n\n        /**\n         * G2C_PlayerInfo Error.\n         * @member {number} Error\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.Error = 0;\n\n        /**\n         * G2C_PlayerInfo Message.\n         * @member {string} Message\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.Message = \"\";\n\n        /**\n         * G2C_PlayerInfo PlayerInfo.\n         * @member {NiceET.IPlayerInfo|null|undefined} PlayerInfo\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.PlayerInfo = null;\n\n        /**\n         * G2C_PlayerInfo PlayerInfos.\n         * @member {Array.<NiceET.IPlayerInfo>} PlayerInfos\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.PlayerInfos = $util.emptyArray;\n\n        /**\n         * G2C_PlayerInfo TestRepeatedString.\n         * @member {Array.<string>} TestRepeatedString\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.TestRepeatedString = $util.emptyArray;\n\n        /**\n         * G2C_PlayerInfo TestRepeatedInt32.\n         * @member {Array.<number>} TestRepeatedInt32\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.TestRepeatedInt32 = $util.emptyArray;\n\n        /**\n         * G2C_PlayerInfo TestRepeatedInt64.\n         * @member {Array.<number|Long>} TestRepeatedInt64\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         */\n        G2C_PlayerInfo.prototype.TestRepeatedInt64 = $util.emptyArray;\n\n        /**\n         * Creates a new G2C_PlayerInfo instance using the specified properties.\n         * @function create\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {NiceET.IG2C_PlayerInfo=} [properties] Properties to set\n         * @returns {NiceET.G2C_PlayerInfo} G2C_PlayerInfo instance\n         */\n        G2C_PlayerInfo.create = function create(properties) {\n            return new G2C_PlayerInfo(properties);\n        };\n\n        /**\n         * Encodes the specified G2C_PlayerInfo message. Does not implicitly {@link NiceET.G2C_PlayerInfo.verify|verify} messages.\n         * @function encode\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {NiceET.IG2C_PlayerInfo} message G2C_PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_PlayerInfo.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.PlayerInfo != null && message.hasOwnProperty(\"PlayerInfo\"))\n                $root.NiceET.PlayerInfo.encode(message.PlayerInfo, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.PlayerInfos != null && message.PlayerInfos.length)\n                for (var i = 0; i < message.PlayerInfos.length; ++i)\n                    $root.NiceET.PlayerInfo.encode(message.PlayerInfos[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.TestRepeatedString != null && message.TestRepeatedString.length)\n                for (var i = 0; i < message.TestRepeatedString.length; ++i)\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.TestRepeatedString[i]);\n            if (message.TestRepeatedInt32 != null && message.TestRepeatedInt32.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.TestRepeatedInt32.length; ++i)\n                    writer.int32(message.TestRepeatedInt32[i]);\n                writer.ldelim();\n            }\n            if (message.TestRepeatedInt64 != null && message.TestRepeatedInt64.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.TestRepeatedInt64.length; ++i)\n                    writer.sint64(message.TestRepeatedInt64[i]);\n                writer.ldelim();\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                writer.uint32(/* id 90, wireType 0 =*/720).int32(message.RpcId);\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified G2C_PlayerInfo message, length delimited. Does not implicitly {@link NiceET.G2C_PlayerInfo.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {NiceET.IG2C_PlayerInfo} message G2C_PlayerInfo message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        G2C_PlayerInfo.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a G2C_PlayerInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {NiceET.G2C_PlayerInfo} G2C_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_PlayerInfo.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.NiceET.G2C_PlayerInfo();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 90:\n                    message.RpcId = reader.int32();\n                    break;\n                case 91:\n                    message.Error = reader.int32();\n                    break;\n                case 92:\n                    message.Message = reader.string();\n                    break;\n                case 1:\n                    message.PlayerInfo = $root.NiceET.PlayerInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    if (!(message.PlayerInfos && message.PlayerInfos.length))\n                        message.PlayerInfos = [];\n                    message.PlayerInfos.push($root.NiceET.PlayerInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    if (!(message.TestRepeatedString && message.TestRepeatedString.length))\n                        message.TestRepeatedString = [];\n                    message.TestRepeatedString.push(reader.string());\n                    break;\n                case 4:\n                    if (!(message.TestRepeatedInt32 && message.TestRepeatedInt32.length))\n                        message.TestRepeatedInt32 = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.TestRepeatedInt32.push(reader.int32());\n                    } else\n                        message.TestRepeatedInt32.push(reader.int32());\n                    break;\n                case 5:\n                    if (!(message.TestRepeatedInt64 && message.TestRepeatedInt64.length))\n                        message.TestRepeatedInt64 = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.TestRepeatedInt64.push(reader.sint64());\n                    } else\n                        message.TestRepeatedInt64.push(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a G2C_PlayerInfo message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {NiceET.G2C_PlayerInfo} G2C_PlayerInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        G2C_PlayerInfo.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a G2C_PlayerInfo message.\n         * @function verify\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        G2C_PlayerInfo.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                if (!$util.isInteger(message.RpcId))\n                    return \"RpcId: integer expected\";\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                if (!$util.isInteger(message.Error))\n                    return \"Error: integer expected\";\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                if (!$util.isString(message.Message))\n                    return \"Message: string expected\";\n            if (message.PlayerInfo != null && message.hasOwnProperty(\"PlayerInfo\")) {\n                var error = $root.NiceET.PlayerInfo.verify(message.PlayerInfo);\n                if (error)\n                    return \"PlayerInfo.\" + error;\n            }\n            if (message.PlayerInfos != null && message.hasOwnProperty(\"PlayerInfos\")) {\n                if (!Array.isArray(message.PlayerInfos))\n                    return \"PlayerInfos: array expected\";\n                for (var i = 0; i < message.PlayerInfos.length; ++i) {\n                    var error = $root.NiceET.PlayerInfo.verify(message.PlayerInfos[i]);\n                    if (error)\n                        return \"PlayerInfos.\" + error;\n                }\n            }\n            if (message.TestRepeatedString != null && message.hasOwnProperty(\"TestRepeatedString\")) {\n                if (!Array.isArray(message.TestRepeatedString))\n                    return \"TestRepeatedString: array expected\";\n                for (var i = 0; i < message.TestRepeatedString.length; ++i)\n                    if (!$util.isString(message.TestRepeatedString[i]))\n                        return \"TestRepeatedString: string[] expected\";\n            }\n            if (message.TestRepeatedInt32 != null && message.hasOwnProperty(\"TestRepeatedInt32\")) {\n                if (!Array.isArray(message.TestRepeatedInt32))\n                    return \"TestRepeatedInt32: array expected\";\n                for (var i = 0; i < message.TestRepeatedInt32.length; ++i)\n                    if (!$util.isInteger(message.TestRepeatedInt32[i]))\n                        return \"TestRepeatedInt32: integer[] expected\";\n            }\n            if (message.TestRepeatedInt64 != null && message.hasOwnProperty(\"TestRepeatedInt64\")) {\n                if (!Array.isArray(message.TestRepeatedInt64))\n                    return \"TestRepeatedInt64: array expected\";\n                for (var i = 0; i < message.TestRepeatedInt64.length; ++i)\n                    if (!$util.isInteger(message.TestRepeatedInt64[i]) && !(message.TestRepeatedInt64[i] && $util.isInteger(message.TestRepeatedInt64[i].low) && $util.isInteger(message.TestRepeatedInt64[i].high)))\n                        return \"TestRepeatedInt64: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a G2C_PlayerInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {NiceET.G2C_PlayerInfo} G2C_PlayerInfo\n         */\n        G2C_PlayerInfo.fromObject = function fromObject(object) {\n            if (object instanceof $root.NiceET.G2C_PlayerInfo)\n                return object;\n            var message = new $root.NiceET.G2C_PlayerInfo();\n            if (object.RpcId != null)\n                message.RpcId = object.RpcId | 0;\n            if (object.Error != null)\n                message.Error = object.Error | 0;\n            if (object.Message != null)\n                message.Message = String(object.Message);\n            if (object.PlayerInfo != null) {\n                if (typeof object.PlayerInfo !== \"object\")\n                    throw TypeError(\".NiceET.G2C_PlayerInfo.PlayerInfo: object expected\");\n                message.PlayerInfo = $root.NiceET.PlayerInfo.fromObject(object.PlayerInfo);\n            }\n            if (object.PlayerInfos) {\n                if (!Array.isArray(object.PlayerInfos))\n                    throw TypeError(\".NiceET.G2C_PlayerInfo.PlayerInfos: array expected\");\n                message.PlayerInfos = [];\n                for (var i = 0; i < object.PlayerInfos.length; ++i) {\n                    if (typeof object.PlayerInfos[i] !== \"object\")\n                        throw TypeError(\".NiceET.G2C_PlayerInfo.PlayerInfos: object expected\");\n                    message.PlayerInfos[i] = $root.NiceET.PlayerInfo.fromObject(object.PlayerInfos[i]);\n                }\n            }\n            if (object.TestRepeatedString) {\n                if (!Array.isArray(object.TestRepeatedString))\n                    throw TypeError(\".NiceET.G2C_PlayerInfo.TestRepeatedString: array expected\");\n                message.TestRepeatedString = [];\n                for (var i = 0; i < object.TestRepeatedString.length; ++i)\n                    message.TestRepeatedString[i] = String(object.TestRepeatedString[i]);\n            }\n            if (object.TestRepeatedInt32) {\n                if (!Array.isArray(object.TestRepeatedInt32))\n                    throw TypeError(\".NiceET.G2C_PlayerInfo.TestRepeatedInt32: array expected\");\n                message.TestRepeatedInt32 = [];\n                for (var i = 0; i < object.TestRepeatedInt32.length; ++i)\n                    message.TestRepeatedInt32[i] = object.TestRepeatedInt32[i] | 0;\n            }\n            if (object.TestRepeatedInt64) {\n                if (!Array.isArray(object.TestRepeatedInt64))\n                    throw TypeError(\".NiceET.G2C_PlayerInfo.TestRepeatedInt64: array expected\");\n                message.TestRepeatedInt64 = [];\n                for (var i = 0; i < object.TestRepeatedInt64.length; ++i)\n                    if ($util.Long)\n                        (message.TestRepeatedInt64[i] = $util.Long.fromValue(object.TestRepeatedInt64[i])).unsigned = false;\n                    else if (typeof object.TestRepeatedInt64[i] === \"string\")\n                        message.TestRepeatedInt64[i] = parseInt(object.TestRepeatedInt64[i], 10);\n                    else if (typeof object.TestRepeatedInt64[i] === \"number\")\n                        message.TestRepeatedInt64[i] = object.TestRepeatedInt64[i];\n                    else if (typeof object.TestRepeatedInt64[i] === \"object\")\n                        message.TestRepeatedInt64[i] = new $util.LongBits(object.TestRepeatedInt64[i].low >>> 0, object.TestRepeatedInt64[i].high >>> 0).toNumber();\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a G2C_PlayerInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof NiceET.G2C_PlayerInfo\n         * @static\n         * @param {NiceET.G2C_PlayerInfo} message G2C_PlayerInfo\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        G2C_PlayerInfo.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.PlayerInfos = [];\n                object.TestRepeatedString = [];\n                object.TestRepeatedInt32 = [];\n                object.TestRepeatedInt64 = [];\n            }\n            if (options.defaults) {\n                object.PlayerInfo = null;\n                object.RpcId = 0;\n                object.Error = 0;\n                object.Message = \"\";\n            }\n            if (message.PlayerInfo != null && message.hasOwnProperty(\"PlayerInfo\"))\n                object.PlayerInfo = $root.NiceET.PlayerInfo.toObject(message.PlayerInfo, options);\n            if (message.PlayerInfos && message.PlayerInfos.length) {\n                object.PlayerInfos = [];\n                for (var j = 0; j < message.PlayerInfos.length; ++j)\n                    object.PlayerInfos[j] = $root.NiceET.PlayerInfo.toObject(message.PlayerInfos[j], options);\n            }\n            if (message.TestRepeatedString && message.TestRepeatedString.length) {\n                object.TestRepeatedString = [];\n                for (var j = 0; j < message.TestRepeatedString.length; ++j)\n                    object.TestRepeatedString[j] = message.TestRepeatedString[j];\n            }\n            if (message.TestRepeatedInt32 && message.TestRepeatedInt32.length) {\n                object.TestRepeatedInt32 = [];\n                for (var j = 0; j < message.TestRepeatedInt32.length; ++j)\n                    object.TestRepeatedInt32[j] = message.TestRepeatedInt32[j];\n            }\n            if (message.TestRepeatedInt64 && message.TestRepeatedInt64.length) {\n                object.TestRepeatedInt64 = [];\n                for (var j = 0; j < message.TestRepeatedInt64.length; ++j)\n                    if (typeof message.TestRepeatedInt64[j] === \"number\")\n                        object.TestRepeatedInt64[j] = options.longs === String ? String(message.TestRepeatedInt64[j]) : message.TestRepeatedInt64[j];\n                    else\n                        object.TestRepeatedInt64[j] = options.longs === String ? $util.Long.prototype.toString.call(message.TestRepeatedInt64[j]) : options.longs === Number ? new $util.LongBits(message.TestRepeatedInt64[j].low >>> 0, message.TestRepeatedInt64[j].high >>> 0).toNumber() : message.TestRepeatedInt64[j];\n            }\n            if (message.RpcId != null && message.hasOwnProperty(\"RpcId\"))\n                object.RpcId = message.RpcId;\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\n                object.Error = message.Error;\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\n                object.Message = message.Message;\n            return object;\n        };\n\n        /**\n         * Converts this G2C_PlayerInfo to JSON.\n         * @function toJSON\n         * @memberof NiceET.G2C_PlayerInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        G2C_PlayerInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return G2C_PlayerInfo;\n    })();\n\n    return NiceET;\n})();\n\nmodule.exports = $root;\n","import { NiceET } from \"./OuterMessage\";\r\nexport class DecodeMsg{\r\n\tpublic rpcId:number;\r\n\tpublic msgObj:any;\r\n}\r\nexport class Opcode{\r\n\tpublic static C2M_TESTREQUEST:number = 101;\r\n\tpublic static M2C_TESTRESPONSE:number = 102;\r\n\tpublic static ACTOR_TRANSFERREQUEST:number = 103;\r\n\tpublic static ACTOR_TRANSFERRESPONSE:number = 104;\r\n\tpublic static C2G_ENTERMAP:number = 105;\r\n\tpublic static G2C_ENTERMAP:number = 106;\r\n\tpublic static UNITINFO:number = 107;\r\n\tpublic static M2C_CREATEUNITS:number = 108;\r\n\tpublic static FRAME_CLICKMAP:number = 109;\r\n\tpublic static M2C_PATHFINDINGRESULT:number = 110;\r\n\tpublic static C2R_PING:number = 111;\r\n\tpublic static R2C_PING:number = 112;\r\n\tpublic static G2C_TEST:number = 113;\r\n\tpublic static C2M_RELOAD:number = 114;\r\n\tpublic static M2C_RELOAD:number = 115;\r\n\tpublic static C2R_LOGIN:number = 116;\r\n\tpublic static R2C_LOGIN:number = 117;\r\n\tpublic static C2G_LOGINGATE:number = 118;\r\n\tpublic static G2C_LOGINGATE:number = 119;\r\n\tpublic static G2C_TESTHOTFIXMESSAGE:number = 120;\r\n\tpublic static C2M_TESTACTORREQUEST:number = 121;\r\n\tpublic static M2C_TESTACTORRESPONSE:number = 122;\r\n\tpublic static PLAYERINFO:number = 123;\r\n\tpublic static C2G_PLAYERINFO:number = 124;\r\n\tpublic static G2C_PLAYERINFO:number = 125;\r\n\tpublic static map = {\r\n\t\t101 : NiceET.C2M_TestRequest.decode,\r\n\t\t102 : NiceET.M2C_TestResponse.decode,\r\n\t\t103 : NiceET.Actor_TransferRequest.decode,\r\n\t\t104 : NiceET.Actor_TransferResponse.decode,\r\n\t\t105 : NiceET.C2G_EnterMap.decode,\r\n\t\t106 : NiceET.G2C_EnterMap.decode,\r\n\t\t107 : NiceET.UnitInfo.decode,\r\n\t\t108 : NiceET.M2C_CreateUnits.decode,\r\n\t\t109 : NiceET.Frame_ClickMap.decode,\r\n\t\t110 : NiceET.M2C_PathfindingResult.decode,\r\n\t\t111 : NiceET.C2R_Ping.decode,\r\n\t\t112 : NiceET.R2C_Ping.decode,\r\n\t\t113 : NiceET.G2C_Test.decode,\r\n\t\t114 : NiceET.C2M_Reload.decode,\r\n\t\t115 : NiceET.M2C_Reload.decode,\r\n\t\t116 : NiceET.C2R_Login.decode,\r\n\t\t117 : NiceET.R2C_Login.decode,\r\n\t\t118 : NiceET.C2G_LoginGate.decode,\r\n\t\t119 : NiceET.G2C_LoginGate.decode,\r\n\t\t120 : NiceET.G2C_TestHotfixMessage.decode,\r\n\t\t121 : NiceET.C2M_TestActorRequest.decode,\r\n\t\t122 : NiceET.M2C_TestActorResponse.decode,\r\n\t\t123 : NiceET.PlayerInfo.decode,\r\n\t\t124 : NiceET.C2G_PlayerInfo.decode,\r\n\t\t125 : NiceET.G2C_PlayerInfo.decode,\r\n\t}\r\n\tpublic static decode(opcode:number, msg:Uint8Array):DecodeMsg {\r\n\t\tlet msgObj = this.map[opcode](msg);\r\n\t\tlet decodeMsg = new DecodeMsg();\r\n\t\tdecodeMsg.rpcId = msgObj.RpcId;\r\n\t\tdecodeMsg.msgObj = msgObj;\r\n\t\treturn decodeMsg;\r\n\t}\r\n}\r\n","\r\nimport { Singleton } from '../common/Singleton';\r\nimport { Logger } from '../logger/Logger';\r\nimport { UILoading } from '../ui/UILoading';\r\nimport { UIWindow } from '../ui/UIWindow';\r\nimport { UIWidge } from '../ui/UIWidge';\r\nimport { UIPanel } from '../ui/UIPanel';\r\nimport { UIFactory } from '../ui/UIFactory';\r\nimport { SceneDef } from '../../modules/ModuleDef';\r\nimport { gameUI } from '../../data/ui/game';\r\n\r\nconst CS = require('csharp');\r\n\r\nexport class UIPageTrack{\r\n    public pkg:string;\r\n    public name:string;\r\n    public arg:any;\r\n}\r\n\r\n\r\nexport class UIManager extends Singleton<UIManager>{\r\n\r\n    private  m_pageTrackStack:Array<UIPageTrack>;\r\n    private m_currentPage:UIPageTrack;\r\n\r\n    private m_listLoadedPanel:Array<UIPanel>;\r\n    private onSceneLoadedOnly:Function;\r\n\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.m_pageTrackStack = new Array<UIPageTrack>();\r\n        this.m_listLoadedPanel = new Array<UIPanel>();\r\n\r\n        CS.UnityEngine.SceneManagement.SceneManager.add_sceneLoaded((scene, mode) =>\r\n        {\r\n            if (this.onSceneLoadedOnly != null) this.onSceneLoadedOnly(scene.name);\r\n        }); \r\n        \r\n\r\n    }\r\n\r\n    private closeAllLoadedPanel():void{\r\n\r\n        for(let i= this.m_listLoadedPanel.length-1; i>=0; i--){\r\n            let panel = this.m_listLoadedPanel[i];\r\n\r\n            if(panel.isOpen){\r\n                panel.close();\r\n            }\r\n\r\n            this.m_listLoadedPanel.slice(i,1);\r\n            panel.dispose();  \r\n        }\r\n\r\n    }\r\n\r\n    public clean():void{\r\n\r\n        this.closeAllLoadedPanel();\r\n\r\n        this.m_pageTrackStack.length = 0;\r\n        this.m_listLoadedPanel.length = 0;\r\n    }\r\n\r\n    public open(pkg:string, name:string, arg?:any){\r\n\r\n        let ui:any = this.getUI(name);\r\n\r\n        if(ui == null){\r\n            ui = UIFactory.createUI(pkg, name);\r\n            this.m_listLoadedPanel.push(ui);\r\n        }\r\n\r\n        if(ui != null){\r\n            ui.open(arg);\r\n        }\r\n\r\n        return ui;\r\n    }\r\n\r\n\r\n    public getUI(name:string):UIPanel{\r\n\r\n        for (const panel of this.m_listLoadedPanel) {\r\n            if(panel.name == name){\r\n                panel;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    //==========================================================UILoading\r\n    //打开Loading界面\r\n    public openLoading(pkg:string, name:string, arg?:any):UILoading{\r\n\r\n        let ui:UILoading = this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n    //关闭Loading界面\r\n    public closeLoading(name:string, arg?:any):void{\r\n        let ui:UILoading = this.getUI(name) as UILoading;\r\n        if(ui != null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n\r\n    //==========================================================Scene\r\n    //加载场景 \r\n    public loadScene(scene:string, onLoadComplete:Function):void{\r\n\r\n        this.onSceneLoadedOnly = (sceneName)=>{\r\n            if(sceneName == scene){\r\n                this.onSceneLoadedOnly = null;\r\n                if(onLoadComplete != null) onLoadComplete();\r\n\r\n                this.closeLoading(gameUI.UILoadingPage);\r\n            }\r\n        };\r\n\r\n        this.openLoading(gameUI.PackageName, gameUI.UILoadingPage);\r\n        CS.UnityEngine.SceneManagement.SceneManager.LoadScene(scene);\r\n\r\n    }\r\n\r\n\r\n    //==========================================================Page\r\n    private openPageWorker(pkg:string, page:string, arg:any){\r\n        this.m_currentPage = new UIPageTrack();\r\n        this.m_currentPage.pkg = pkg;\r\n        this.m_currentPage.name = page;\r\n        this.m_currentPage.arg = arg;\r\n\r\n        this.closeAllLoadedPanel();\r\n\r\n        this.open(pkg, page, arg);\r\n    }\r\n\r\n    //打开页面, 会关闭上一个页面上的所有窗口,Widiget等\r\n    public openPage(pkg:string, name:string, arg?:any){\r\n\r\n        if(this.m_currentPage != undefined && this.m_currentPage.name!=name){\r\n            this.m_pageTrackStack.push(this.m_currentPage);\r\n        }\r\n\r\n        this.openPageWorker(pkg, name, arg);\r\n    }\r\n\r\n    //返回上一个页面\r\n    public goBackPage():void{\r\n\r\n        if(this.m_pageTrackStack.length > 0){\r\n            let track = this.m_pageTrackStack.pop();\r\n            this.openPageWorker(track.pkg ,track.name, track.arg);\r\n        }else{\r\n            this.enterMainPage();\r\n        }\r\n    }\r\n\r\n    //打开场景页面,此页面不计入页面栈,无返回上一面按钮\r\n    public openPageInScene(scene:string, pkg:string, page:string, arg:any){\r\n        let oldScene:string = CS.UnityEngine.SceneManagement.SceneManager.GetActiveScene().name;\r\n        if(oldScene == scene){\r\n            this.openPageWorker(pkg, page, arg);\r\n        }else{\r\n            this.loadScene(scene, ()=>{\r\n                 //场景加载完成\r\n                this.openPageWorker(pkg, page, arg);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    //回到主城\r\n    public enterMainPage():void{\r\n\r\n        this.m_pageTrackStack.length = 0;\r\n        this.openPageInScene(SceneDef.HomeScene, gameUI.PackageName ,gameUI.UIHomePage,null)\r\n    }\r\n\r\n    //==========================================================UIWindow\r\n    //打开窗口\r\n    public openWindow(pkg:string, name:string, arg:any):UIWindow{\r\n\r\n        let ui:UIWindow = this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n\r\n    //关闭窗口\r\n    public closeWindow(name:string, arg:any){\r\n\r\n        let ui:UIWindow = this.getUI(name) as UIWindow;\r\n        if(ui != null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n    //==========================================================UIWidget\r\n    //打开Widiget\r\n    public openWidget(pkg:string, name:string, arg:any):UIWidge{\r\n\r\n        let ui:UIWidge = this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n\r\n    //u关闭Widiget\r\n    public closeWidget(name:string, arg:any){\r\n\r\n        let ui:UIWidge = this.getUI(name) as UIWidge;\r\n        if(ui!=null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n\r\n}","\r\n\r\n\r\nexport enum UITypeDef{\r\n    Unkown = 0,\r\n    Page = 1,\r\n    Window=2,\r\n    Widget = 3,\r\n    Loading =4\r\n}\r\n\r\nexport class UILayerDef{\r\n\r\n    public static Background:number = 0;\r\n    public static Page:number = 1000;\r\n    public static NormalWindow:number = 2000;\r\n    public static TopWindow:number = 3000;\r\n    public static Widget:number = 4000;\r\n    public static Loading:number = 5000;\r\n    public static Unkown:number = 9999;\r\n\r\n    public static  getDefaultLayer(type:UITypeDef):number{\r\n\r\n        switch(type){\r\n            case UITypeDef.Loading: return this.Loading;\r\n            case UITypeDef.Widget: return this.Widget;\r\n            case UITypeDef.Window: return this.NormalWindow;\r\n            case UITypeDef.Page: return this.Page;\r\n            case UITypeDef.Unkown: return this.Unkown;\r\n            default: return this.Unkown; \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class UIComDefs{\r\n    public static BackBtn = \"back_btn\";\r\n    public static WindowCloseBtn = \"win_close_btn\";\r\n}\r\n\r\n\r\n\r\n","/** This is an automatically generated class by FairyGUI. Please do not modify it. **/\n\nexport class gameUI\n{\n    public static PackageName:string = \"game\";\n    public static UILoadingPage:string = \"LoadingPage\";\n    public static UIUINoticeWin:string = \"UINoticeWin\";\n    public static UILaunchPage:string = \"LaunchPage\";\n    public static UILoginPage:string = \"LoginPage\";\n    public static UISelServerWin:string = \"SelServerWin\";\n    public static UIserverItem:string = \"serverItem\";\n    public static UIHomePage:string = \"HomePage\";\n    public static UILevelPage:string = \"LevelPage\";\n    public static UIShopPage:string = \"ShopPage\";\n}","\r\nexport  class GameConfig{\r\n\r\n    public static debug:boolean = true;\r\n\r\n    public static realmServerIP:string = \"127.0.0.1\"; \r\n    public static realmServerPort:number = 10002;\r\n\r\n}","import {Logger} from '../logger/Logger';\r\n\r\n\r\n\r\nexport class MesObj{\r\n    public listeners:Array<Function>;\r\n    public obj:any;\r\n}\r\n\r\n\r\nexport class Messenger{\r\n\r\n    private listenerMap = new Map<number,MesObj>();\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    public addListener(e_type:number, e_obj:any, e_listner:Function):void{\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n\r\n        if(typeof(msgObj) == \"undefined\"){\r\n            msgObj = new MesObj();\r\n            msgObj.obj = e_obj;\r\n            msgObj.listeners = new Array<Function>();\r\n        }\r\n        msgObj.listeners.push(e_listner);\r\n\r\n        this.listenerMap.set(e_type, msgObj);\r\n    }\r\n\r\n    public getListener(e_type:number):MesObj{\r\n        return this.listenerMap.get(e_type);\r\n    }\r\n\r\n    public broadcast(e_type:number, ...params:any[]) : void {\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n        \r\n        if(typeof(msgObj) != \"undefined\"){\r\n            for(let l of msgObj.listeners){\r\n               l.apply(msgObj.obj, params);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public removeListenerByType(e_type:number) :void {\r\n\r\n        this.listenerMap.delete(e_type);\r\n    }\r\n\r\n\r\n    public removeListener(e_type:number, e_listener:Function ):void{\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n\r\n        if(typeof(msgObj) != \"undefined\"){\r\n            \r\n            for(let i:number =0; i< msgObj.listeners.length; i++){\r\n                if(msgObj.listeners[i] == e_listener){\r\n                    msgObj.listeners.splice(i,1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clearup():void{\r\n\r\n        this.listenerMap.clear();\r\n    }\r\n\r\n}","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","import { Singleton } from \"../../framework/common/Singleton\";\r\nexport class SkillConfigTR{\r\n\t public _id:number ;\r\n\t public _Name:string ;\r\n\t public _Description:string ;\r\n\t public _CoolTime:number ;\r\n\t public _CostSP:number ;\r\n\t public _AttackDistance:number ;\r\n\t public _AttackAngle:number ;\r\n\t public _AttackTargetTags:Array<string> ;\r\n\t public _ImpactType:Array<string> ;\r\n\t public _NextBattlerId:number ;\r\n\t public _AtkRatio:number ;\r\n\t public _DurationTime:number ;\r\n\t public _AtkInterval:number ;\r\n\t public _SkillPrefab:string ;\r\n\t public _AnimationName:string ;\r\n\t public _HitFxPrefab:string ;\r\n\t public _Level:number ;\r\n\t public _AttackType:number ;\r\n\t public _SelectorType:number ;\r\n\r\n\tconstructor(_id:number, _Name:string, _Description:string, _CoolTime:number, _CostSP:number, _AttackDistance:number, _AttackAngle:number, _AttackTargetTags:Array<string>, _ImpactType:Array<string>, _NextBattlerId:number, _AtkRatio:number, _DurationTime:number, _AtkInterval:number, _SkillPrefab:string, _AnimationName:string, _HitFxPrefab:string, _Level:number, _AttackType:number, _SelectorType:number){\r\n\t\tthis._id = _id;\r\n\t\tthis._Name = _Name;\r\n\t\tthis._Description = _Description;\r\n\t\tthis._CoolTime = _CoolTime;\r\n\t\tthis._CostSP = _CostSP;\r\n\t\tthis._AttackDistance = _AttackDistance;\r\n\t\tthis._AttackAngle = _AttackAngle;\r\n\t\tthis._AttackTargetTags = _AttackTargetTags;\r\n\t\tthis._ImpactType = _ImpactType;\r\n\t\tthis._NextBattlerId = _NextBattlerId;\r\n\t\tthis._AtkRatio = _AtkRatio;\r\n\t\tthis._DurationTime = _DurationTime;\r\n\t\tthis._AtkInterval = _AtkInterval;\r\n\t\tthis._SkillPrefab = _SkillPrefab;\r\n\t\tthis._AnimationName = _AnimationName;\r\n\t\tthis._HitFxPrefab = _HitFxPrefab;\r\n\t\tthis._Level = _Level;\r\n\t\tthis._AttackType = _AttackType;\r\n\t\tthis._SelectorType = _SelectorType;\r\n\r\n\t}\r\n}\r\n\r\nexport class SkillConfigTB extends Singleton<SkillConfigTB>{ \r\n\tpublic trs:Map<number, SkillConfigTR> = new Map<number, SkillConfigTR>();\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.trs.set(1001, new SkillConfigTR(1001, \"降龙十八掌\", \"带有强力攻击技能\", 10, 178, 1, 30, [\"Enemy\"], [\"CostSP\", \"Damage\"], 0, 2, 2, 1, \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", \"skill1\", \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", 1, 1, 1));\r\n\t\tthis.trs.set(1002, new SkillConfigTR(1002, \"暴雨梨花\", \"带有强力攻击技能\", 10, 178, 1, 30, [\"Enemy\"], [\"CostSP\", \"Damage\"], 0, 2, 2, 1, \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", \"skill2\", \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", 1, 1, 1));\r\n\t\tthis.trs.set(1003, new SkillConfigTR(1003, \"排山倒海\", \"带有强力攻击技能\", 10, 178, 1, 30, [\"Enemy\"], [\"CostSP\", \"Damage\"], 0, 2, 2, 1, \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", \"skill3\", \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", 1, 1, 1));\r\n\t\tthis.trs.set(1004, new SkillConfigTR(1004, \"葵花点穴手\", \"带有强力攻击技能\", 10, 178, 1, 30, [\"Enemy\"], [\"CostSP\", \"Damage\"], 0, 2, 2, 1, \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", \"skill4\", \"Effect/Prefab/UI/ef_ui_TaskFinish.prefab\", 1, 1, 1));\r\n\t }\r\n}\r\n\r\n","import { Singleton } from \"../common/Singleton\";\r\nimport { GeneralModule } from \"../module/GeneralModule\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { ModuleFactory } from \"../module/ModuleFactory\";\r\n\r\n\r\nexport class MessageObject{\r\n    public msg:number;\r\n    public args:any[];\r\n}\r\n\r\n\r\nexport class ModuleManager extends Singleton<ModuleManager>{\r\n\r\n    private m_mapModules : Map<string, GeneralModule>;\r\n    private m_mapCacheMessage : Map<string,Array<MessageObject>>;\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.m_mapModules = new  Map<string, GeneralModule>();\r\n        this.m_mapCacheMessage = new Map<string, Array<MessageObject>>();\r\n    }\r\n\r\n\r\n    public cleanup() : void{\r\n\r\n        this.m_mapCacheMessage.clear();\r\n\r\n        for (const module of this.m_mapModules.values()) {\r\n            module.release();\r\n        }\r\n\r\n        this.m_mapModules.clear();\r\n\r\n    }\r\n\r\n    private createModule(name:string, args?:any):GeneralModule{\r\n\r\n        Logger.log(`name = ${name}, args = ${args}`);\r\n\r\n        if(this.hasModule(name)){\r\n            Logger.logError(`The Module<${name}> Has Existed!`);\r\n            return this.getModule(name);\r\n        }\r\n\r\n        let module : GeneralModule = ModuleFactory.createModule(name);\r\n\r\n        if(module == null ){\r\n            Logger.logError(`模块实例化失败：<${name}> `);\r\n            return null;\r\n        }\r\n\r\n        this.m_mapModules.set(name, module);\r\n        module.create(args);\r\n\r\n        //处理缓存的消息\r\n        if(this.m_mapCacheMessage.has(name)){\r\n            let list = this.m_mapCacheMessage.get(name);\r\n            for (const msgobj of list) {\r\n                module.handleMessage(msgobj.msg, msgobj.args);\r\n            }\r\n            this.m_mapCacheMessage.delete(name);\r\n        }\r\n\r\n        return module;\r\n    }\r\n\r\n\r\n    private hasModule(name : string):boolean{\r\n\r\n        return this.m_mapModules.has(name);\r\n    }\r\n\r\n    private getModule(name : string) : GeneralModule{\r\n\r\n        return this.m_mapModules.get(name);\r\n    }\r\n\r\n    private removeModule(name: string):void{\r\n        \r\n        let module = this.getModule(name);\r\n        if(module != undefined)\r\n            module.release();\r\n        this.m_mapModules.delete(name);\r\n    }\r\n\r\n    private getCacheMessageList(target: string){\r\n        let list:Array<MessageObject> = this.m_mapCacheMessage.get(target);\r\n\r\n        if(list == undefined){\r\n            list = new Array<MessageObject>();\r\n            this.m_mapCacheMessage.set(target, list);\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    public sendMessage(target:string, msg:number, ...args:any){\r\n\r\n        let module:GeneralModule = this.getModule(target);\r\n        if(module != undefined){\r\n            module.handleMessage(msg, args);\r\n        }else{\r\n            let list = this.getCacheMessageList(target);\r\n            let obj:MessageObject = new MessageObject();\r\n            obj.msg = msg;\r\n            obj.args = args;\r\n            list.push(obj);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public show(target:string, ...args:any){\r\n\r\n        let model = this.getModule(target);\r\n\r\n        if(!model){\r\n            model = this.createModule(target);\r\n        }\r\n        model.show(args);\r\n        \r\n    }\r\n}","\r\n\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { Messenger, MesObj } from \"../common/Messenger\";\r\n\r\n\r\nexport abstract class GeneralModule{\r\n   \r\n    private m_name:string = \"\";\r\n    public title:string;\r\n\r\n    protected messenger:Messenger = new Messenger();\r\n\r\n    public get Name() : string {\r\n        return this.m_name\r\n    }\r\n\r\n   constructor(){\r\n\r\n   }\r\n\r\n     //当模块收到消息后，对消息进行一些处理\r\n    public handleMessage(msg:number, args:any[]){\r\n        \r\n       let mesObj:MesObj =  this.messenger.getListener(msg);\r\n       if(typeof(mesObj) != \"undefined\"){\r\n            for(let l of mesObj.listeners){\r\n                l.apply(mesObj.obj, args);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n   //创建模块\r\n   public abstract create(args?:any):void;\r\n\r\n   //Show\r\n   public abstract show(args?:any):void;\r\n\r\n   //释放模块\r\n    public abstract  release(): void;\r\n\r\n\r\n\r\n}","import { UIPanel } from \"./UIPanel\";\r\nimport { UITypeDef, UIComDefs } from \"./UIDefine\";\r\nimport { UIManager } from \"../manager/UIManager\";\r\n\r\n\r\nexport abstract class UIPage extends UIPanel{\r\n\r\n    public get uiType(): UITypeDef {    \r\n        return UITypeDef.Page;\r\n    }\r\n\r\n\r\n    private m_btnGoBack:any;\r\n\r\n\r\n    public onAwake():void{\r\n        \r\n        this.m_btnGoBack = this.fui.GetChild(UIComDefs.BackBtn);\r\n\r\n        if(this.m_btnGoBack!=undefined){\r\n            this.m_btnGoBack.onClick.Add(()=>{\r\n                this.onBtnGoBack();\r\n            });\r\n        }\r\n    }\r\n\r\n    //绑定FairyGUI元件\r\n    protected bindAll(target:any):void{\r\n        for(let k in target[\"binders\"]){\r\n            let fguiName = this[\"binders\"][k];\r\n            this[k] = this.fui.GetChild(fguiName);\r\n        }\r\n    }\r\n\r\n\r\n    public onOpen(arg:any):void{\r\n        super.onOpen(arg);\r\n\r\n        \r\n    \r\n    }\r\n    public onClose(arg:any):void{\r\n        super.onClose(arg);\r\n\r\n    }\r\n\r\n    private onBtnGoBack(){\r\n        UIManager.Instance(UIManager).goBackPage();\r\n    }\r\n\r\n} ","import { UITypeDef, UILayerDef } from \"./UIDefine\";\r\n\r\nconst CS = require('csharp');\r\n\r\nexport abstract class UIPanel {\r\n\r\n    public fui:any;  //FairyGUI 对象\r\n\r\n\r\n    private _name:string;\r\n    public set name(v:string){\r\n        this._name = v;\r\n    }\r\n    public get name():string{\r\n        return this._name;\r\n    }\r\n\r\n    public get uiType(): UITypeDef {    \r\n        return UITypeDef.Unkown;\r\n    }\r\n    \r\n    private m_layer:UILayerDef = UILayerDef.Unkown;\r\n    public get layer() : UILayerDef {\r\n        return this.m_layer; \r\n    }\r\n    public set layer(v : UILayerDef) {\r\n        this.m_layer = v;\r\n    }\r\n    \r\n    public  get isOpen() : boolean{\r\n\r\n        return this.fui.visiable;\r\n    }\r\n\r\n\r\n    public abstract onAwake():void;\r\n    public onUpdate():void{}\r\n\r\n    public onOpen(arg:any):void{\r\n        this.layer = UILayerDef.getDefaultLayer(this.uiType);\r\n    }\r\n    public onClose(arg:any):void{}\r\n\r\n    public awake():void{\r\n        this.onAwake();\r\n\r\n    }\r\n\r\n    public update():void{\r\n        this.onUpdate();\r\n    }\r\n\r\n    public open(arg:any):void{\r\n        \r\n        this.onOpen(arg);\r\n\r\n        CS.FairyGUI.GRoot.inst.AddChild(this.fui);\r\n\r\n\r\n    }\r\n\r\n    public close(arg:any = null):void{\r\n\r\n\r\n        this.onClose(arg);\r\n\r\n        CS.FairyGUI.GRoot.inst.RemoveChild(this.fui);\r\n\r\n    }\r\n\r\n    public dispose():void{\r\n        this.fui.Dispose();\r\n    }\r\n}","\n\n\n// FairyGUI 元件 绑定器\nexport function binder(name:string){\n    return function(target:any, key:string | symbol){\n        target[\"binders\"] = target[\"binders\"] || {};\n        target[\"binders\"][key] = name;\n    }\n}","\n\n export class NetErrorCode\n {\n     public static  ERR_SocketConnSucc:number = 100000;\n\n     public static  ERR_ConnectGateKeyError:number = 100006;\n\n     public static  ERR_PeerDisconnect:number   = 102008;\n     public static  ERR_SocketCantSend:number   = 102009;\n     public static  ERR_SocketError:number      = 102010;\n     public static  ERR_SocketConnError:number  = 102011;\n\n\n     \n\n }","\r\nconst CS = require('csharp');\r\nimport {Logger} from './framework/logger/Logger';\r\nimport {UnitTest} from './unittest/UnitTest';\r\nimport { GameObjectPool } from './framework/common/GameObjectPool';\r\nimport { ModuleManager } from './framework/manager/ModuleManager';\r\nimport { ModuleDef } from './modules/ModuleDef';\r\nimport { UIManager } from './framework/manager/UIManager';\r\nimport { ResManager } from './framework/manager/ResManager';\r\nimport { ExcelManager } from './data/excel/ExcelManager';\r\n\r\n\r\n\r\nclass GameMain{\r\n\r\n    constructor() {\r\n        CS.JsManager.Instance.JsOnApplicationQuit = () => this.onApplicationQuit();\r\n        CS.JsManager.Instance.JsOnDispose = () => this.onDispose();\r\n    }\r\n\r\n    public async start() {\r\n        \r\n        try{\r\n            Logger.log(\"Game start in JS....\");\r\n\r\n            //启动单例\r\n            GameObjectPool.Instance(GameObjectPool);\r\n            ModuleManager.Instance(ModuleManager);\r\n    \r\n            UIManager.Instance(UIManager);\r\n            ResManager.Instance(ResManager);\r\n    \r\n    \r\n            //预加载excel数据\r\n            ExcelManager.Instance(ExcelManager);\r\n\r\n      \r\n            //do Unit Test\r\n            UnitTest.doTest();\r\n\r\n            //进入登录模块\r\n            ModuleManager.Instance(ModuleManager).show(ModuleDef.LoginModule);\r\n\r\n            //JS启动完成，通知C#层\r\n            CS.GameLaunch.Instance.JsLuanchFinish();\r\n\r\n        }catch(ex){\r\n            Logger.logError(ex);\r\n        }\r\n\r\n    }\r\n\r\n    public onApplicationQuit():void {\r\n\r\n        GameObjectPool.Instance(GameObjectPool).cleanup(true);\r\n        ModuleManager.Instance(ModuleManager).cleanup();\r\n        Logger.log(\"Game onApplicationQuit in JS....\");\r\n    }\r\n\r\n    public onDispose():void {\r\n        \r\n        Logger.log(\"Game onDispose in JS....\");\r\n    }\r\n    \r\n}\r\n\r\nnew GameMain().start();\r\n\r\n","import {TimeUtil} from '../framework/util/TimeUtil';\r\nimport {SingletonTest} from './SingletonTest';\r\nimport {Logger} from '../framework/logger/Logger';\r\nimport {Messenger} from '../framework/common/Messenger';\r\nimport { ResManager } from '../framework/manager/ResManager';\r\nimport { NiceET } from '../data/pb/OuterMessage';\r\nimport { SkillConfigTB, SkillConfigTR } from '../data/excel/SkillConfig';\r\nimport { Opcode } from '../data/pb/Opcode';\r\n\r\nconst CS = require('csharp');\r\n\r\n\r\nexport class UnitTest{\r\n    public static testVar:number = 10000;\r\n\r\n\r\n    public static async doTest(){\r\n\r\n        Logger.log(\"TimeUtil =============================\");\r\n        TimeUtil.test();\r\n\r\n        Logger.log(\"Singleton =============================\");\r\n        SingletonTest.Instance(SingletonTest);\r\n        Logger.log(\"===\");\r\n        let t1: SingletonTest = SingletonTest.Instance(SingletonTest);\r\n        let t2: SingletonTest = SingletonTest.Instance(SingletonTest);\r\n\r\n        Logger.log(t1.test() + \" : \" + t2.test());\r\n        t1.add();\r\n        Logger.log(t1.test() + \" : \" + t2.test());\r\n        t2.add();\r\n        Logger.log(t1.test() + \" : \" + t2.test());\r\n\r\n\r\n        Logger.log(\"Messager =============================\");\r\n\r\n        let messenger:Messenger = new Messenger();\r\n        let listen:Function = function(a:number, b:string){\r\n            Logger.log(`listen call: ${a} , ${b}`)\r\n        }\r\n        let listen2:Function = function(a:number, b:string){\r\n            Logger.log(`listen call2: ${a} , ${b}`)\r\n        }\r\n\r\n        let  EVENT_CODE:number = 100;\r\n        messenger.addListener(EVENT_CODE,this, listen);\r\n        messenger.addListener(EVENT_CODE,this, listen2);\r\n        messenger.broadcast(EVENT_CODE, 999,\" Hello\");\r\n\r\n        messenger.removeListener(EVENT_CODE,listen);\r\n        messenger.broadcast(EVENT_CODE, 999,\" Hello\");\r\n\r\n        messenger.clearup();\r\n        messenger.broadcast(EVENT_CODE, 999,\" Hello\");\r\n\r\n\r\n        Logger.log(\"Timer =============================\");\r\n\r\n        let interval = setInterval(()=>{\r\n            Logger.log(\"inter val..\")\r\n        },1000);\r\n        let timeout = setTimeout(()=>{\r\n            clearInterval(interval);\r\n        },5000); \r\n\r\n\r\n\r\n\r\n\r\n        Logger.log(\"ResourceManager =============================\");\r\n\r\n        let prefab = await ResManager.Instance(ResManager).loadPrefab(\"Models/1001/Character.prefab\") ;\r\n        \r\n        Logger.log(prefab);\r\n\r\n        //let inst = CS.UnityEngine.GameObject.Instantiate(prefab);\r\n        //inst.name = \"Test Ch\";\r\n\r\n\r\n        Logger.log(\"引用类型 =============================\");\r\n        let testMap:Map<string,Array<number>> = new Map();\r\n        testMap.set(\"key1\" ,new Array());\r\n\r\n        let arr1:Array<number> = testMap.get(\"key1\");\r\n        arr1.push(12);\r\n        arr1.push(333);\r\n\r\n        let arr2:Array<number> = testMap.get(\"key1\");\r\n        Logger.log(arr2);\r\n\r\n\r\n        // Logger.log(\"FariyGUI =============================\");\r\n        //  let page:UI_LoginPage = new UI_LoginPage();\r\n        //  CS.FairyGUI.GRoot.inst.AddChild(page._ui);\r\n        //  Logger.log(page._ui);\r\n\r\n        // Logger.log(\"ModuleManager =============================\");\r\n\r\n        // ModuleManager.Instance(ModuleManager).createModule(ModuleDef.LoginModule,\"create login\");\r\n\r\n        // ModuleManager.Instance(ModuleManager).sendMessage(ModuleDef.LoginModule, \"test1\",2233);\r\n        // ModuleManager.Instance(ModuleManager).sendMessage(ModuleDef.HomeModule, \"test2\",2233);\r\n        // Logger.log(\"then create Home\");\r\n        // ModuleManager.Instance(ModuleManager).createModule(ModuleDef.HomeModule,\"create login\");\r\n    \r\n        \r\n        Logger.log(\"UIManager =============================\");\r\n\r\n\r\n\r\n        Logger.log(\"excel data =============================\");\r\n        let skillMap = SkillConfigTB.Instance(SkillConfigTB).trs;\r\n        let skilltr:SkillConfigTR = skillMap.get(1003);\r\n        Logger.log(`${skilltr._Name} : ${skilltr._AttackType}`)\r\n        let impacttype = skilltr._ImpactType;\r\n        Logger.log(impacttype);\r\n\r\n\r\n\r\n        Logger.log(\"Protobuf =============================\");\r\n\r\n        try{\r\n            let c2m_req = {\r\n                \"RpcId\" : 11,\r\n                \"ActorId\" : 998,\r\n                \"request\" : \"test\"\r\n            };\r\n\r\n\r\n            //验证\r\n           let v1 = NiceET.C2M_TestRequest.verify(c2m_req);\r\n            Logger.log(\"verify pb: \"+ v1);\r\n            \r\n            let msg = NiceET.C2M_TestRequest.create(c2m_req);\r\n            msg.RpcId = 100000;\r\n            msg.request = \"good bye\";\r\n            msg.ActorId = 88888;\r\n\r\n            Logger.log(msg);\r\n\r\n            let buf = NiceET.C2M_TestRequest.encode(msg).finish();\r\n            Logger.log(buf);\r\n\r\n            let de_buf = NiceET.C2M_TestRequest.decode(buf);\r\n            Logger.log(de_buf.RpcId);\r\n            Logger.log(de_buf.request);\r\n\r\n            let de_m = NiceET.C2M_TestRequest.decode;\r\n            let de_m_t = de_m(buf);\r\n            Logger.log(\"========:\"+de_m_t.request);\r\n\r\n            Logger.log(\"protobuf opcode:\");\r\n            let op_test = Opcode.map[Opcode.C2M_TESTREQUEST](buf);\r\n            Logger.log(\"test opcode: \"+ op_test.request);\r\n\r\n        }catch(ex){\r\n            Logger.log(ex);\r\n        }\r\n\r\n        Logger.log(\"UintArray =============================\");\r\n\r\n        let  opcode_arr = new Uint8Array([257,25]);\r\n        Logger.log(opcode_arr.subarray(0,1));\r\n        Logger.log(opcode_arr.length);\r\n\r\n        let opcode_arr2 = new Uint8Array([33]);\r\n\r\n        //合并 Uint8Array\r\n        let merge_arr = new Uint8Array(opcode_arr.length + opcode_arr2.length);\r\n        merge_arr.set(opcode_arr2);\r\n        merge_arr.set(opcode_arr, opcode_arr2.length);\r\n        Logger.log(merge_arr.length);\r\n     \r\n        let n:number = 5678;\r\n        let buffer:Uint8Array = new Uint8Array(4);\r\n\r\n        // << 左移  >> 右移  >>> 无符号右移\r\n        //n转uint8Array\r\n        buffer[0] = n >>> 24;\r\n        buffer[1] = n >>> 16;\r\n        buffer[2] = n >>> 8;\r\n        buffer[3] = n & 0xff;\r\n\r\n\r\n        //unit8Array转n\r\n        n = buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];\r\n        Logger.log(n);\r\n\r\n\r\n        n = 300;\r\n        let buffer1:Uint8Array = new Uint8Array(2);\r\n        buffer1[0] = n >>> 8;\r\n        buffer1[1] = n & 0xff;\r\n\r\n        Logger.log(buffer1);\r\n        n = buffer1[0]<<8 | buffer1[1];\r\n        Logger.log(n);\r\n\r\n        \r\n\r\n    }\r\n\r\n    \r\n\r\n}","import {Logger} from '../logger/Logger';\r\n\r\nexport class TimeUtil{\r\n\r\n\r\n    private static prefixInteger(num, length):string{\r\n\r\n        return  (Array(length).join('0') + num).slice(-length);\r\n    }\r\n\r\n    //将一个时间数转换成\"00:00:00\"格式\r\n    public static getTimeString1(timeInt : number):string {\r\n\r\n        if(timeInt <= 0){\r\n            return \"00:00:00\";\r\n        }else{\r\n\r\n            let hour:number = Math.floor(timeInt / (60 * 60));\r\n            let hourstr = this.prefixInteger(hour, 2);\r\n\r\n            let minnute:number = Math.floor(timeInt/ 60) % 60;\r\n            let minutestr:string = this.prefixInteger(minnute, 2);\r\n\r\n            let second:number = timeInt % 60;\r\n            let secondstr:string = this.prefixInteger(second,2);\r\n\r\n            return `${hourstr}:${minutestr}:${secondstr}`;\r\n        }\r\n        \r\n    }\r\n\r\n    //将一个时间数转换成\"00:00\"格式\r\n    public static getTimeString(timeInt:number):string{\r\n\r\n        if(timeInt <= 0){\r\n            return \"00:00:00\";\r\n        }else{\r\n            let hour:number = Math.floor(timeInt / (60 * 60));\r\n            let hourstr = this.prefixInteger(hour, 2);\r\n\r\n            let minnute:number = Math.floor(timeInt/ 60) % 60;\r\n            let minutestr:string = this.prefixInteger(minnute, 2);\r\n\r\n            return `${hourstr}:${minutestr}`;\r\n        }\r\n    }\r\n\r\n    //将一个时间数转换成\"00\"分格式\r\n    public static getTimeMinuteString(timeInt:number):string{\r\n\r\n        if(timeInt <= 0){\r\n            return \"00:00:00\";\r\n        }else{\r\n        \r\n            let minnute:number = Math.floor(timeInt/ 60) % 60;\r\n            let minutestr:string = this.prefixInteger(minnute, 2);\r\n\r\n            return `${minutestr}`;\r\n        }\r\n    }\r\n\r\n    //将一个时间数转换成\"00“秒格式\r\n    public static getTimeSecondString(timeInt:number):string{\r\n\r\n        if(timeInt <= 0){\r\n            return \"00:00:00\";\r\n        }else{\r\n            let second:number = timeInt % 60;\r\n            let secondstr:string = this.prefixInteger(second,2);\r\n\r\n            return `${secondstr}`;\r\n        }\r\n    }\r\n\r\n    //获取本月1号是星期几\r\n    public static getWeekOfMonthFirstDay(time:number):number{\r\n\r\n        let date = new Date(time);\r\n        date.setDate(1);\r\n\r\n        return date.getDay();\r\n    }\r\n\r\n    //判断是否为闰年\r\n    public static isLeapYear(year:number)\r\n    {\r\n        if ( (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0) ){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //每个月对应的天数\r\n    static  months:Array<number> = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    private static getMonthDays_(year:number, month:number):number{\r\n        if(month == 2){\r\n            if(this.isLeapYear(year))\r\n                return 29;\r\n            else{\r\n                return 28;\r\n            }\r\n        }else{\r\n            return this.months[month];\r\n        }\r\n    }\r\n\r\n    public static getMonthDays(time:number):number {\r\n\r\n        let t = new Date(time);\r\n\r\n        return this.getMonthDays_(t.getFullYear(), t.getMonth());\r\n    }\r\n\r\n\r\n\r\n    public static test():void{\r\n\r\n        let t1:string = this.getTimeString1(5000);\r\n        Logger.log(t1);\r\n        \r\n\r\n        let t2:string = this.getTimeString(5000);\r\n        Logger.log(t2);\r\n\r\n        let t3:string = this.getTimeMinuteString(5000);\r\n        Logger.log(t3);\r\n\r\n        let t4:string = this.getTimeSecondString(5000);\r\n        Logger.log(t4);\r\n\r\n        let time:number = new Date().getTime();\r\n\r\n        let t5:number = this.getWeekOfMonthFirstDay(time);\r\n        Logger.log(\"getWeekOfMonthFirstDay: \"+t5 + \" ,time:\"+time);\r\n\r\n        let t6:number = this.getMonthDays(time);\r\n        Logger.log(\"getMonthDays: \"+t6);\r\n\r\n    }\r\n\r\n\r\n}","\r\n\r\nimport {Singleton} from '../framework/common/Singleton';\r\nimport {Logger} from '../framework/logger/Logger';\r\n\r\nexport class SingletonTest extends Singleton<SingletonTest>{\r\n\r\n    private num:number = 0;\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        Logger.log(\"SingletonTest call constructor\");\r\n    }\r\n\r\n    public add() : void {\r\n\r\n        this.num += 1;\r\n    }\r\n\r\n    public test() : number{\r\n\r\n        return this.num;\r\n\r\n    }\r\n\r\n}","module.exports = require(\"puerts\");","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","\r\nimport { Logger } from '../logger/Logger';\r\nimport { Singleton } from './Singleton';\r\nimport { ResManager } from '../manager/ResManager';\r\n\r\n\r\nconst CS = require('csharp');\r\n\r\n// -- GameObject缓存池\r\n// -- 注意：\r\n// -- 1、所有需要预设都从这里加载，不要直接到ResourcesManager去加载，由这里统一做缓存管理\r\n// -- 2、缓存分为两部分：从资源层加载的原始GameObject(Asset)，从GameObject实例化出来的多个Inst\r\nexport class GameObjectPool extends Singleton<GameObjectPool>{\r\n\r\n    private __cacheTransRoot = null;\r\n    private __goPool = new Map();\r\n    private __instCache:Map<string,Array<any>> = new Map<string,Array<any>>();\r\n\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        let go = CS.UnityEngine.GameObject.Find(\"GameObjectCacheRoot\");\r\n\r\n        if(go == undefined){\r\n            go = new CS.UnityEngine.GameObject(\"GameObjectCacheRoot\");\r\n            CS.UnityEngine.Object.DontDestroyOnLoad(go);\r\n        }\r\n\r\n        this.__cacheTransRoot = go.transform;\r\n    }\r\n\r\n    //-- 检测是否已经被缓存\r\n    public checkHasCached(path:string){\r\n\r\n        let cachedInst:Array<any> = this.__instCache.get(path);\r\n        if(cachedInst != undefined && cachedInst.length > 0){\r\n            return true;\r\n        }\r\n\r\n        let pooledGo = this.__goPool.get(path);\r\n        return pooledGo != undefined;\r\n    }\r\n\r\n\r\n    //-- 缓存并实例化GameObject\r\n    public cacheAndInstGameObject(path:string, go:any, inst_count:number = 1){\r\n\r\n        this.__goPool.set(path, go);\r\n        if(inst_count > 0){\r\n\r\n            let cachedInst:Array<any> = this.__instCache.get(path);\r\n            for(let i:number =0; i < inst_count; i++){\r\n\r\n                let inst = CS.UnityEngine.GameObject.Instantiate(go);\r\n                inst.transform.SetParent(this.__cacheTransRoot);\r\n                inst.SetActive(false);\r\n\r\n                cachedInst.push(inst);\r\n            }\r\n        }\r\n    }\r\n\r\n    //-- 尝试从缓存中获取\r\n    public tryGetFromCache(path:string):any{\r\n\r\n        if(!this.checkHasCached(path)) {\r\n            return null;\r\n        }\r\n\r\n        let cachedInst:Array<object>  = this.__instCache.get(path);\r\n        if(cachedInst != undefined && cachedInst.length>0){\r\n            \r\n            let inst = cachedInst.pop();\r\n            return inst;\r\n        }\r\n\r\n        let pooledGo = this.__goPool.get(path);\r\n        if(pooledGo != undefined){\r\n            let inst = CS.UnityEngine.GameObject.Instantiate(pooledGo);\r\n            return inst;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    //预加载：可提供初始实例化个数\r\n    public async preLoadGameObjectAsync(path:string, inst_count:number, callback:Function,...params){\r\n\r\n        if(this.checkHasCached(path)){\r\n            if(callback!=null){\r\n                callback(params);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let go = await ResManager.Instance(ResManager).loadPrefab(path);\r\n        if(go!=undefined){\r\n            this.cacheAndInstGameObject(path, go,inst_count);\r\n        }\r\n\r\n        if(callback!=null){\r\n            callback(params);\r\n        }\r\n    }\r\n\r\n\r\n    //-- 异步获取：必要时加载\r\n    public async getGameObjectAsync(path:string, callback:Function,...params){\r\n\r\n        let inst:any = this.tryGetFromCache(path);\r\n        if(inst ==null){\r\n            await this.preLoadGameObjectAsync(path, 1, callback, params);\r\n        }\r\n\r\n        inst = this.tryGetFromCache(path);\r\n        inst.SetActive(true);\r\n\r\n        \r\n    }\r\n\r\n\r\n    //-- 回收\r\n    public recycleGameObject(path:string, inst:any){\r\n\r\n        inst.transform.SetParent(this.__cacheTransRoot);\r\n        inst.SetActive(false);\r\n\r\n        let cachedInst = this.__instCache.get(path) || new Array();\r\n        cachedInst.push(inst);\r\n\r\n        this.__instCache.set(path, cachedInst);\r\n\r\n    }\r\n\r\n\r\n    //-- 清理缓存\r\n    public cleanup(includePooledGo:boolean = false){\r\n\r\n        this.__instCache.forEach((values, key)=>{\r\n\r\n            for(let inst of values){\r\n                if(inst != null){\r\n                    CS.UnityEngine.GameObject.Destroy(inst);\r\n                }\r\n            }\r\n        });\r\n        this.__instCache.clear(); \r\n\r\n        if(includePooledGo){\r\n            this.__goPool.forEach((go, key)=>{\r\n\r\n                if(go != null){\r\n                    ResManager.Instance(ResManager).releaseAddressGO(go);\r\n                }\r\n            });\r\n\r\n            this.__goPool.clear();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ModuleDef } from \"../../modules/ModuleDef\";\r\nimport { LoginModule } from \"../../modules/login/LoginModule\";\r\nimport { HomeModule } from \"../../modules/home/HomeModule\";\r\nimport { GeneralModule } from \"./GeneralModule\";\r\nimport { Logger } from \"../logger/Logger\";\r\n\r\n\r\nexport class ModuleFactory{\r\n\r\n\r\n    public static createModule(name : string):GeneralModule {\r\n\r\n        if(name == ModuleDef.LoginModule){\r\n\r\n            return new LoginModule();\r\n\r\n        }else if(name == ModuleDef.HomeModule){\r\n\r\n            return new HomeModule();\r\n        }\r\n\r\n\r\n        Logger.logError(`创建Module失败： ${name}`);\r\n        return null;\r\n    }\r\n\r\n}","import { GeneralModule } from \"../../framework/module/GeneralModule\";\r\nimport { Logger } from \"../../framework/logger/Logger\";\r\nimport { UIManager } from \"../../framework/manager/UIManager\";\r\nimport { SceneDef, ModuleMessage } from \"../ModuleDef\";\r\nimport { gameUI } from \"../../data/ui/game\";\r\nimport { GameSession } from \"../../framework/net/GameSession\";\r\nimport { GameConfig } from \"../../global/GameConfig\";\r\nimport { Opcode } from \"../../data/pb/Opcode\";\r\nimport { NetErrorCode } from \"../../framework/net/NetErrorCode\";\r\nimport { NiceET } from \"../../data/pb/OuterMessage\";\r\n\r\n\r\nconst CS = require('csharp');\r\n\r\n\r\n\r\nexport class LoginModule extends GeneralModule{\r\n\r\n    private sessionReam:GameSession;\r\n    private sessionGate:GameSession;\r\n\r\n    private account:string;\r\n    private password:string;\r\n\r\n    private gateId:any;\r\n    private gateKey:number|Long;\r\n    private _playerID:number|Long;\r\n\r\n    public get playerID(){\r\n        return this._playerID;\r\n    }\r\n\r\n    public create(args:any):void{\r\n        this.messenger.addListener(ModuleMessage.LOGIN_REAMSERVER,this, this.loginReamServer);\r\n   }\r\n\r\n   public show(args:any):void{\r\n        UIManager.Instance(UIManager).openPageInScene(SceneDef.LoginScene, gameUI.PackageName, gameUI.UILoginPage, args);\r\n   }\r\n   \r\n    public  release(): void{\r\n        this.messenger.removeListener(ModuleMessage.LOGIN_REAMSERVER,this.loginReamServer);\r\n    }\r\n\r\n\r\n    public loginReamServer(account:string, password:string){\r\n\r\n        this.account = account;\r\n        this.password = password;\r\n\r\n        //登录验证服\r\n        this.sessionReam = GameSession.Instance(GameSession).connectChannel(\r\n            GameConfig.realmServerIP+\":\"+GameConfig.realmServerPort,\r\n            (channel:any,code:number)=>{\r\n                this.onReamSocketErr(channel, code);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    public onReamSocketErr(channel:any, code:number){\r\n       \r\n        if(code == NetErrorCode.ERR_SocketConnSucc){\r\n            this.sessionReam.id = channel.Id;\r\n      \r\n            //发送登录指令\r\n            let rpcID = this.sessionReam.rpcId;\r\n            let msg = NiceET.C2R_Login.create();\r\n            msg.RpcId = rpcID;\r\n            msg.Account = this.account;\r\n            msg.Password = this.password;\r\n            let buf = NiceET.C2R_Login.encode(msg).finish();\r\n            this.sessionReam.send(Opcode.C2R_LOGIN, rpcID, buf, (response:any)=>{\r\n                \r\n                //登录成功\r\n                let msg  =  response as NiceET.R2C_Login;\r\n                this.gateId = msg.GateId;\r\n                this.gateKey = msg.Key;\r\n                \r\n                Logger.log(\"login ream succ, gate addr:\"+msg.Address + \",key:\"+msg.Key);\r\n\r\n                //断开认证服\r\n                this.sessionReam.disconnect();\r\n                this.sessionReam = null;\r\n                //登录网关服\r\n                this.loginGateServer(msg.Address);\r\n\r\n            });\r\n        }else{\r\n            Logger.logError(\"login reamserver err, code: \"+code + \",id:\"+channel.Id);\r\n\r\n        }\r\n    }\r\n\r\n    //登录游戏服\r\n    public loginGateServer(address:string){\r\n\r\n        this.sessionGate = GameSession.Instance(GameSession).connectChannel(\r\n            address,\r\n            (channel:any,code:number)=>{\r\n                Logger.log(\"login Gate Server: \"+code);\r\n\r\n                this.onGateSocketErr(channel, code);\r\n            }\r\n        );\r\n    }\r\n\r\n    public onGateSocketErr(channel:any, code:number){\r\n        if(code == NetErrorCode.ERR_SocketConnSucc){\r\n            this.sessionGate.id = channel.Id;\r\n        \r\n            //发送登录请求\r\n            let rpcId = this.sessionGate.rpcId;\r\n            let msg = NiceET.C2G_LoginGate.create();\r\n            msg.RpcId = rpcId;\r\n            msg.GateId = this.gateId;\r\n            msg.Key = this.gateKey;\r\n            \r\n\r\n            let buf = NiceET.C2G_LoginGate.encode(msg).finish();\r\n\r\n            Logger.log(\"login gate succ ,key: \"+msg.Key + \", rpcid:\"+rpcId);\r\n            this.sessionGate.send(Opcode.C2G_LOGINGATE,rpcId,buf,(response:any)=>{\r\n\r\n                let msg = response as NiceET.G2C_LoginGate;\r\n               \r\n                this._playerID = msg.PlayerId;\r\n                Logger.log(\"login gate response..\" + msg.PlayerId);\r\n\r\n                UIManager.Instance(UIManager).enterMainPage();\r\n            });\r\n\r\n        }else{\r\n            Logger.logError(\"gate server err, code: \"+code + \",id:\"+channel.Id);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","\r\nimport { UILoginPage } from \"../../modules/login/ui/UILoginPage\";\r\nimport { UIPanel } from \"./UIPanel\";\r\nimport { Singleton } from \"../common/Singleton\";\r\nimport { UISimpleLoading } from \"./UILib/UISimpleLoading\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { UIHomePage } from \"../../modules/home/ui/UIHomePage\";\r\nimport { gameUI } from \"../../data/ui/game\";\r\n\r\n\r\nconst CS = require('csharp');\r\n\r\n\r\nexport class UIFactory{\r\n\r\n\r\n    public static createUI(pkg:string, name:string){\r\n        Logger.log(`create UI: ${pkg}:${name}`)\r\n        let comp = CS.FairyGUI.UIPackage.CreateObject(pkg, name).asCom\r\n        \r\n        let ui:UIPanel = null;\r\n\r\n\r\n        switch (name){\r\n            case gameUI.UILoginPage:\r\n                ui = new UILoginPage();\r\n                break;\r\n            case gameUI.UILoadingPage:\r\n                ui = new UISimpleLoading();\r\n                break;\r\n            case gameUI.UIHomePage:\r\n                ui = new UIHomePage();\r\n                break;\r\n        }\r\n\r\n        if(ui!=null){\r\n            ui.fui = comp;\r\n            ui.name = name;\r\n            ui.awake();\r\n        } \r\n\r\n        return ui;\r\n    }\r\n\r\n\r\n\r\n}","import { UIPage } from \"../../../framework/ui/UIPage\";\r\nimport { ModuleManager } from \"../../../framework/manager/ModuleManager\";\r\nimport { ModuleDef, ModuleMessage } from \"../../ModuleDef\";\r\nimport { Logger } from \"../../../framework/logger/Logger\";\r\nimport { binder } from \"../../../framework/common/NiceDecorator\";\r\n\r\n\r\n\r\nexport class UILoginPage extends UIPage{\r\n\r\n    @binder(\"account\")\r\n    public m_account:any;\r\n    @binder(\"password\")\r\n    public m_password:any;\r\n    @binder(\"loginBtn\")\r\n    public m_loginBtn:any;\r\n\r\n\r\n    public onAwake():void{\r\n        super.onAwake();\r\n        this.bindAll(this);\r\n        \r\n        this.m_loginBtn.onClick.Add(()=>{\r\n            this.onLoginClick();\r\n        });\r\n    }\r\n    \r\n\r\n    public onOpen(arg:any):void{\r\n        super.onOpen(arg);\r\n\r\n        \r\n    }\r\n    public onClose(arg:any):void{\r\n        super.onClose(arg);\r\n\r\n    }\r\n\r\n\r\n    public onLoginClick(){\r\n\r\n        let account = this.m_account.text;\r\n        let password = this.m_password.text;\r\n\r\n        Logger.log(`account:${account} - password: ${password}`);\r\n\r\n        if(account != \"\" && password != \"\"){\r\n            ModuleManager.Instance(ModuleManager).sendMessage(\r\n                ModuleDef.LoginModule,\r\n                ModuleMessage.LOGIN_REAMSERVER,\r\n                account,password\r\n                );\r\n        }\r\n\r\n    }\r\n}","import { UILoading } from \"../UILoading\"\r\n\r\n\r\n\r\n\r\nexport class UISimpleLoading extends UILoading{\r\n\r\n    public onAwake(): void {\r\n        \r\n    }\r\n\r\n\r\n    public UpdateProgress(): void {\r\n        \r\n    }\r\n\r\n    \r\n}","import { UIPanel } from \"./UIPanel\";\r\nimport { UITypeDef } from \"./UIDefine\";\r\n\r\n\r\n\r\nexport class UILoadingArg{\r\n\r\n    public title:string = \"\";\r\n    public tips:string = \"\";\r\n    public progress:number = 0;\r\n}\r\n\r\n\r\nexport abstract class  UILoading extends UIPanel{\r\n    \r\n    public get uiType(): UITypeDef {    \r\n        return UITypeDef.Loading;\r\n    }\r\n\r\n\r\n    public txtTitle : any;\r\n    public txtTips : any;\r\n\r\n    m_arg:UILoadingArg; \r\n    public get arg() : UILoadingArg {\r\n        return this.m_arg; \r\n    }\r\n    \r\n\r\n    private updateText(){\r\n        // if (txtTitle != null)\r\n        // {\r\n        //     txtTitle.text = m_arg.title + \"(\" + (int)(m_arg.progress * 100) + \"%)\";\r\n        // }\r\n        // if (txtTips != null)\r\n        // {\r\n        //     txtTips.text = m_arg.tips;\r\n        // }\r\n    }\r\n\r\n    public onOpen(arg:any):void{\r\n        super.onOpen(arg);\r\n\r\n        this.m_arg = arg as UILoadingArg;\r\n        if(this.m_arg == undefined){\r\n            this.m_arg = new UILoadingArg();\r\n        }\r\n        this.updateText();\r\n    }\r\n\r\n    public showProgress(progress:number):void{\r\n        this.m_arg.progress = progress;\r\n    }\r\n\r\n    public showProgress2(tips:string, progress:number):void{\r\n        this.m_arg.tips = tips;\r\n        this.m_arg.progress = progress;\r\n    }\r\n\r\n    public abstract UpdateProgress():void;\r\n\r\n    public onUpdate():void{\r\n\r\n        super.onUpdate();\r\n\r\n        if(this.m_arg != undefined){\r\n            this.updateText();\r\n            this.UpdateProgress();\r\n        }\r\n\r\n    }\r\n}","import { UIPage } from \"../../../framework/ui/UIPage\";\nimport { Logger } from \"../../../framework/logger/Logger\";\nimport { binder } from \"../../../framework/common/NiceDecorator\";\n\n\n\nexport class UIHomePage extends UIPage{\n\n    @binder(\"chatBtn\")\n    public m_chatBtn:any;\n    @binder(\"bagBtn\")\n    public m_bagBtn:any;\n    @binder(\"shopBtn\")\n    public m_shopBtn:any;\n    @binder(\"levelBtn\")\n    public m_levelBtn:any;\n\n\n    \n    public onAwake():void{\n        super.onAwake();\n        this.bindAll(this);\n\n\n        this.m_chatBtn.onClick.Add(()=>{\n            this.onchatBtn();\n        });\n        this.m_bagBtn.onClick.Add(()=>{\n            this.onbagBtn();\n        });\n        this.m_shopBtn.onClick.Add(()=>{\n            this.onshopBtn();\n        });\n        this.m_levelBtn.onClick.Add(()=>{\n            this.onlevelBtn();\n        });\n    }\n\n    \n    public onOpen(arg:any):void{\n        super.onOpen(arg);\n\n        \n    }\n    public onClose(arg:any):void{\n        super.onClose(arg);\n\n    }\n\n\n    public onchatBtn(){\n        Logger.log(\"on chat...\");\n    }\n    public onbagBtn(){\n        Logger.log(\"on bag ..\");\n    }\n    public onshopBtn(){\n        Logger.log(\"on shop...\");\n    }\n    public onlevelBtn(){\n        Logger.log(\"on level...\");\n    }\n\n}","import { Singleton } from \"../common/Singleton\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { Opcode } from \"../../data/pb/Opcode\";\r\nimport { NetErrorCode } from \"./NetErrorCode\";\r\n\r\nconst CS = require('csharp');\r\n\r\n\r\nexport class MsgPack{\r\n    public sendTime:number;\r\n    public callback:Function;\r\n    public retryTimes:number = 0;\r\n    public bytes:Uint8Array;\r\n}\r\n\r\nexport class GameSession extends Singleton<GameSession>{\r\n\r\n    public id:number = 0;  //session ID\r\n    private reSendInterval:number = 10000; //10秒重发一次\r\n    private timeoutInterval:number = 5000; //5秒检查一次是否超时\r\n    private maxReSendTimes:number = 5; //最大重发次数\r\n    private timeoutIimer:any;\r\n\r\n    private _rpcId:number = 1;\r\n    private channel:any;\r\n    private requestCallback:Map<number,MsgPack> = new Map<number,MsgPack>();\r\n    private listeners:Map<number,Function> = new Map<number,Function>();\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    public get rpcId():number{\r\n        return ++this._rpcId;\r\n    }\r\n\r\n    //address-> ip:port\r\n    public connectChannel(address:string, connCaback:any){\r\n\r\n        this.channel = CS.NiceTS.TService.Instance.GetChannel();\r\n        \r\n        this.channel.errorCallback = (channel:any, code:number)=>{\r\n            if(code == NetErrorCode.ERR_SocketConnSucc){\r\n                this.timeoutIimer = setInterval(()=>{\r\n                   // this.checkTimeoutMsg();\r\n                }, this.timeoutInterval);\r\n            }\r\n\r\n            connCaback(channel, code);\r\n        };\r\n        \r\n        this.channel.readCallback = (buffer:Uint8Array)=>{\r\n            this.onReceive(buffer);\r\n        };\r\n\r\n        this.channel.Connect(address);\r\n\r\n        return this;\r\n    }\r\n\r\n    //接收服务器通知\r\n    public listen(opcode:number,callback:Function){\r\n        this.listeners.set(opcode, callback);\r\n    }\r\n\r\n    //发送protoubf消息\r\n    public send(opcode:number,rpcid:number, message:Uint8Array, callBack:Function){\r\n        \r\n        //封装消息：opcode+msg\r\n        let lenBuf:Uint8Array = new Uint8Array(2);\r\n        lenBuf[1] = opcode >>> 8;\r\n        lenBuf[0] = opcode & 0xff;\r\n\r\n        let sendArray:Uint8Array = new Uint8Array(message.length + 2);\r\n        sendArray.set(lenBuf);\r\n        sendArray.set(message,2);\r\n        \r\n        if(callBack != null){\r\n            let msgPack:MsgPack = new MsgPack();\r\n            msgPack.sendTime = new Date().getTime();\r\n            msgPack.callback = callBack;\r\n            msgPack.bytes = sendArray;\r\n\r\n            this.requestCallback.set(rpcid, msgPack);\r\n        }\r\n\r\n        //Logger.log(\"send array: \"+sendArray);\r\n        this.channel.Send(sendArray);\r\n    }\r\n\r\n    private reSend(bytes:Uint8Array){\r\n        this.channel.Send(bytes);\r\n    }\r\n\r\n    public onReceive(buffer:Uint8Array){\r\n        \r\n        let msgBuf = new Uint8Array(buffer);\r\n\r\n        let  opcode = msgBuf[1] << 8 | msgBuf[0];\r\n         let msgBytes:Uint8Array = msgBuf.subarray(2);\r\n\r\n        let decodeMsg =  Opcode.decode(opcode, msgBytes);\r\n        let rpcId = decodeMsg.rpcId;\r\n\r\n\r\n        if(rpcId==undefined || !this.requestCallback.has(rpcId)){\r\n            //检查是否是服务器下发的消息\r\n            if(this.listeners.has(opcode)){\r\n                let listen = this.listeners.get(opcode);\r\n                listen(decodeMsg.msgObj);\r\n            }\r\n\r\n        }else{\r\n            let msgPack:MsgPack = this.requestCallback.get(rpcId);\r\n            msgPack.callback(decodeMsg.msgObj);  \r\n\r\n            this.requestCallback.delete(rpcId);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private checkTimeoutMsg(){\r\n\r\n        let currTime = new Date().getTime();\r\n\r\n        this.requestCallback.forEach((value, key) =>{\r\n\r\n            if(value.retryTimes >= this.maxReSendTimes) {\r\n                //超过最大重发次数，丢弃\r\n                Logger.log(`Message resend too more, opcode:${key}, lastsend:${value.sendTime}`);\r\n                this.requestCallback.delete(key); \r\n            }else{\r\n\r\n                if((currTime - value.sendTime) >= this.reSendInterval){\r\n                    value.retryTimes++;\r\n                    value.sendTime = currTime;\r\n                    //重发消息\r\n                    this.reSend(value.bytes);\r\n                    Logger.log(`resend message:, opcode:${key}, retry times:${value.retryTimes}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public disconnect():void{\r\n\r\n        clearInterval(this.timeoutIimer);\r\n\r\n        this.channel.Dispose();\r\n    }\r\n}","import { GeneralModule } from \"../../framework/module/GeneralModule\";\r\nimport { Logger } from \"../../framework/logger/Logger\";\r\n\r\n\r\nexport class HomeModule extends GeneralModule{\r\n\r\n    public create(args:any):void{\r\n\r\n        Logger.log(\" Home creeate,args: \"+args);\r\n   }\r\n\r\n   public show(args:any):void{\r\n    Logger.log(\" Show,args: \"+args);\r\n   }\r\n\r\n\r\n    public  release(): void{\r\n\r\n        Logger.log(\"Home Release \");\r\n    }\r\n\r\n\r\n\r\n}","import { Singleton } from \"../../framework/common/Singleton\";\r\nimport { HeroConfigTB } from \"./HeroConfig\";\r\nimport { SkillConfigTB } from \"./SkillConfig\";\r\nimport { UnitConfigTB } from \"./UnitConfig\";\r\nexport class ExcelManager extends Singleton<ExcelManager>{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tHeroConfigTB.Instance(HeroConfigTB);\r\n\t\tSkillConfigTB.Instance(SkillConfigTB);\r\n\t\tUnitConfigTB.Instance(UnitConfigTB);\r\n\t}\r\n }\r\n","import { Singleton } from \"../../framework/common/Singleton\";\r\nexport class HeroConfigTR{\r\n\t public _id:number ;\r\n\t public _BaseATK:number ;\r\n\t public _SP:number ;\r\n\t public _HP:number ;\r\n\t public _AttackDistance:number ;\r\n\t public _AttackInterval:number ;\r\n\r\n\tconstructor(_id:number, _BaseATK:number, _SP:number, _HP:number, _AttackDistance:number, _AttackInterval:number){\r\n\t\tthis._id = _id;\r\n\t\tthis._BaseATK = _BaseATK;\r\n\t\tthis._SP = _SP;\r\n\t\tthis._HP = _HP;\r\n\t\tthis._AttackDistance = _AttackDistance;\r\n\t\tthis._AttackInterval = _AttackInterval;\r\n\r\n\t}\r\n}\r\n\r\nexport class HeroConfigTB extends Singleton<HeroConfigTB>{ \r\n\tpublic trs:Map<number, HeroConfigTR> = new Map<number, HeroConfigTR>();\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.trs.set(2001, new HeroConfigTR(2001, 100, 200, 200, 1, 1));\r\n\t\tthis.trs.set(2002, new HeroConfigTR(2002, 101, 220, 202, 2, 2));\r\n\t\tthis.trs.set(2003, new HeroConfigTR(2003, 104, 210, 200, 1, 3));\r\n\t\tthis.trs.set(2004, new HeroConfigTR(2004, 109, 200, 200, 1, 2));\r\n\t }\r\n}\r\n\r\n","import { Singleton } from \"../../framework/common/Singleton\";\r\nexport class UnitConfigTR{\r\n\t public _id:number ;\r\n\t public _Name:string ;\r\n\t public _Desc:string ;\r\n\t public _Position:number ;\r\n\t public _Height:number ;\r\n\t public _Weight:number ;\r\n\r\n\tconstructor(_id:number, _Name:string, _Desc:string, _Position:number, _Height:number, _Weight:number){\r\n\t\tthis._id = _id;\r\n\t\tthis._Name = _Name;\r\n\t\tthis._Desc = _Desc;\r\n\t\tthis._Position = _Position;\r\n\t\tthis._Height = _Height;\r\n\t\tthis._Weight = _Weight;\r\n\r\n\t}\r\n}\r\n\r\nexport class UnitConfigTB extends Singleton<UnitConfigTB>{ \r\n\tpublic trs:Map<number, UnitConfigTR> = new Map<number, UnitConfigTR>();\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.trs.set(1001, new UnitConfigTR(1001, \"米克尔\", \"带有强力攻击技能\", 1, 178, 68));\r\n\t }\r\n}\r\n\r\n"],"sourceRoot":""}